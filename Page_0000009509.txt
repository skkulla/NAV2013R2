OBJECT Page 9509 Debugger Break Rules
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Debugger Break Rules;
               ESM=Reglas de salto de depurador;
               FRC=RŠgles d'arrˆt du d‚bogueur;
               ENC=Debugger Break Rules];
    PageType=StandardDialog;
  }
  CONTROLS
  {
    { 1   ;    ;Container ;
                Name=Content;
                ContainerType=ContentArea }

    { 2   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General];
                GroupType=Group }

    { 3   ;2   ;Field     ;
                CaptionML=[ENU=Break On Error;
                           ESM=Interrumpir en error;
                           FRC=Arrˆt en cas d'erreur;
                           ENC=Break On Error];
                SourceExpr=BreakOnError }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Break On Record Changes;
                           ESM=Interrumpir en cambios de registro;
                           FRC=Arrˆt en cas de modification de l'enregistrement;
                           ENC=Break On Record Changes];
                SourceExpr=BreakOnRecordChanges }

    { 4   ;2   ;Field     ;
                CaptionML=[ENU=Skip Codeunit 1;
                           ESM=Omitir unidad de c¢digo 1;
                           FRC=Ignorer Codeunitÿ1;
                           ENC=Skip Codeunit 1];
                SourceExpr=SkipCodeunit1 }

  }
  CODE
  {
    VAR
      BreakOnError@1000 : Boolean;
      BreakOnRecordChanges@1001 : Boolean;
      SkipCodeunit1@1002 : Boolean;

    PROCEDURE SetBreakOnError@51(Value@1000 : Boolean);
    BEGIN
      BreakOnError := Value;
    END;

    PROCEDURE GetBreakOnError@1() : Boolean;
    BEGIN
      EXIT(BreakOnError);
    END;

    PROCEDURE SetBreakOnRecordChanges@52(Value@1000 : Boolean);
    BEGIN
      BreakOnRecordChanges := Value;
    END;

    PROCEDURE GetBreakOnRecordChanges@2() : Boolean;
    BEGIN
      EXIT(BreakOnRecordChanges);
    END;

    PROCEDURE SetSkipCodeunit1@3(Value@1000 : Boolean);
    BEGIN
      SkipCodeunit1 := Value;
    END;

    PROCEDURE GetSkipCodeunit1@4() : Boolean;
    BEGIN
      EXIT(SkipCodeunit1);
    END;

    BEGIN
    END.
  }
}

