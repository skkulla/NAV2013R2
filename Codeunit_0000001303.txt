OBJECT Codeunit 1303 Correct Posted Sales Invoice
{
  OBJECT-PROPERTIES
  {
    Date=12/02/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10.00.35800;
  }
  PROPERTIES
  {
    TableNo=112;
    Permissions=TableData 112=rm,
                TableData 114=rm;
    OnRun=VAR
            SalesHeader@1001 : Record 36;
          BEGIN
            CreateCopyDocument(Rec,SalesHeader,SalesHeader."Document Type"::"Credit Memo");

            CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
            SetTrackInfoForCancellation(Rec);

            COMMIT;
          END;

  }
  CODE
  {
    VAR
      PostedInvoiceIsPaidCorrectErr@1000 : TextConst 'ENU=You cannot correct this posted sales invoice because it is fully or partially paid.\\To reverse a paid sales invoice, you must manually create a sales credit memo.;ESM=No puede corregir esta factura de venta registrada porque est  total o parcialmente pagada.\\Para revertir una factura de venta pagada, debe crear una nota de cr‚dito de venta manualmente.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car elle est totalement ou partiellement pay‚e.\\Pour inverser une facture de vente pay‚e, vous devez cr‚er une note de cr‚dit de vente manuellement.;ENC=You cannot correct this posted sales invoice because it is fully or partially paid.\\To reverse a paid sales invoice, you must manually create a sales credit memo.';
      PostedInvoiceIsPaidCCancelErr@1019 : TextConst 'ENU=You cannot cancel this posted sales invoice because it is fully or partially paid.\\To reverse a paid sales invoice, you must manually create a sales credit memo.;ESM=No puede cancelar esta factura de venta registrada porque est  total o parcialmente pagada.\\Para revertir una factura de venta pagada, debe crear una nota de cr‚dito de venta manualmente.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car elle est totalement ou partiellement pay‚e.\\Pour inverser une facture de vente pay‚e, vous devez cr‚er une note de cr‚dit de vente manuellement.;ENC=You cannot cancel this posted sales invoice because it is fully or partially paid.\\To reverse a paid sales invoice, you must manually create a sales credit memo.';
      AlreadyCorrectedErr@1001 : TextConst 'ENU=You cannot correct this posted sales invoice because it has been canceled.;ESM=No puede corregir esta factura de venta registrada porque se ha cancelado.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car elle a ‚t‚ annul‚e.;ENC=You cannot correct this posted sales invoice because it has been cancelled.';
      AlreadyCancelledErr@1005 : TextConst 'ENU=You cannot cancel this posted sales invoice because it has already been canceled.;ESM=No puede cancelar esta factura de venta registrada porque ya se ha cancelado.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car elle a d‚j… ‚t‚ annul‚e.;ENC=You cannot cancel this posted sales invoice because it has already been cancelled.';
      CustomerIsBlockedCorrectErr@1002 : TextConst '@@@="%1 = Customer name";ENU=You cannot correct this posted sales invoice because customer %1 is blocked.;ESM=No puede corregir esta factura de venta registrada porque el cliente %1 est  bloqueado.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car le client %1 est bloqu‚.;ENC=You cannot correct this posted sales invoice because customer %1 is blocked.';
      CustomerIsBlockedCancelErr@1016 : TextConst '@@@="%1 = Customer name";ENU=You cannot cancel this posted sales invoice because customer %1 is blocked.;ESM=No puede cancelar esta factura de venta registrada porque el cliente %1 est  bloqueado.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car le client %1 est bloqu‚.;ENC=You cannot cancel this posted sales invoice because customer %1 is blocked.';
      ItemIsBlockedCorrectErr@1003 : TextConst '@@@="%1 = Item No. %2 = Item Description";ENU=You cannot correct this posted sales invoice because item %1 %2 is blocked.;ESM=No puede corregir esta factura de venta registrada porque el producto %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car l''article %1 %2 est bloqu‚.;ENC=You cannot correct this posted sales invoice because item %1 %2 is blocked.';
      ItemIsBlockedCancelErr@1017 : TextConst '@@@="%1 = Item No. %2 = Item Description";ENU=You cannot cancel this posted sales invoice because item %1 %2 is blocked.;ESM=No puede cancelar esta factura de venta registrada porque el producto %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car l''article %1 %2 est bloqu‚.;ENC=You cannot cancel this posted sales invoice because item %1 %2 is blocked.';
      AccountIsBlockedCorrectErr@1018 : TextConst '@@@="%1 = Table Caption %2 = Account number.";ENU=You cannot correct this posted sales invoice because %1 %2 is blocked.;ESM=No puede corregir esta factura de venta registrada porque %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car %1 %2 est bloqu‚.;ENC=You cannot correct this posted sales invoice because %1 %2 is blocked.';
      AccountIsBlockedCancelErr@1025 : TextConst '@@@="%1 = Table Caption %2 = Account number.";ENU=You cannot cancel this posted sales invoice because %1 %2 is blocked.;ESM=No puede cancelar esta factura de venta registrada porque %1 %2 est  bloqueado.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car %1 %2 est bloqu‚.;ENC=You cannot cancel this posted sales invoice because %1 %2 is blocked.';
      NoFreeInvoiceNoSeriesCorrectErr@1004 : TextConst 'ENU=You cannot correct this posted sales invoice because no unused invoice numbers are available. \\You must extend the range of number series for sales invoices.;ESM=No puede corregir esta factura de venta registrada porque no hay ning£n n£mero de factura sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las facturas de venta.;FRC=Vous ne pouvez pas corriger cette facture vente report‚e car il n''existe plus de num‚ro de facture inutilis‚. \Vous devez ‚tendre la plage de s‚ries de num‚ros des factures vente.;ENC=You cannot correct this posted sales invoice because no unused invoice numbers are available. \\You must extend the range of number series for sales invoices.';
      NoFreeInvoiceNoSeriesCancelErr@1026 : TextConst 'ENU=You cannot cancel this posted sales invoice because no unused invoice numbers are available. \\You must extend the range of number series for sales invoices.;ESM=No puede cancelar esta factura de venta registrada porque no hay ning£n n£mero de factura sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las facturas de venta.;FRC=Vous ne pouvez pas annuler cette facture vente report‚e car il n''existe plus de num‚ro de facture inutilis‚. \Vous devez ‚tendre la plage de s‚ries de num‚ros des factures vente.;ENC=You cannot cancel this posted sales invoice because no unused invoice numbers are available. \\You must extend the range of number series for sales invoices.';
      NoFreeCMSeriesCorrectErr@1013 : TextConst 'ENU=You cannot correct this posted sales invoice because no unused credit memo numbers are available. \\You must extend the range of number series for credit memos.;ESM=No puede corregir esta factura de venta registrada porque no hay ning£n n£mero de nota de cr‚dito sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito.;FRC=Vous ne pouvez pas corriger cette facture vente report‚e car il n''existe plus de num‚ro de note de cr‚dit inutilis‚. \Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dits.;ENC=You cannot correct this posted sales invoice because no unused credit memo numbers are available. \\You must extend the range of number series for credit memos.';
      NoFreeCMSeriesCancelErr@1027 : TextConst 'ENU=You cannot cancel this posted sales invoice because no unused credit memo numbers are available. \\You must extend the range of number series for credit memos.;ESM=No puede cancelar esta factura de venta registrada porque no hay ning£n n£mero de nota de cr‚dito sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito.;FRC=Vous ne pouvez pas annuler cette facture vente report‚e car il n''existe plus de num‚ro de note de cr‚dit inutilis‚. \Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dits.;ENC=You cannot cancel this posted sales invoice because no unused credit memo numbers are available. \\You must extend the range of number series for credit memos.';
      NoFreePostCMSeriesCorrectErr@1028 : TextConst 'ENU=You cannot correct this posted sales invoice because no unused posted credit memo numbers are available. \\You must extend the range of number series for posted credit memos.;ESM=No puede corregir esta factura de venta registrada porque no hay ning£n n£mero de nota cr‚dito regis. sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito registradas.;FRC=Vous ne pouvez pas corriger cette facture vente report‚e car il n''existe plus de num‚ro de note de cr‚dit report‚ inutilis‚. \Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dits report‚es.;ENC=You cannot correct this posted sales invoice because no unused posted credit memo numbers are available. \\You must extend the range of number series for posted credit memos.';
      NoFreePostCMSeriesCancelErr@1029 : TextConst 'ENU=You cannot cancel this posted sales invoice because no unused posted credit memo numbers are available. \\You must extend the range of number series for posted credit memos.;ESM=No puede cancelar esta factura de venta registrada porque no hay ning£n n£mero de nota cr‚dito regis. sin usar disponible. \\Debe ampliar el intervalo de n£meros de serie para las notas de cr‚dito registradas.;FRC=Vous ne pouvez pas annuler cette facture vente report‚e car il n''existe plus de num‚ro de note de cr‚dit report‚e inutilis‚. \Vous devez ‚tendre la plage de s‚ries de num‚ros des notes de cr‚dits report‚es.;ENC=You cannot cancel this posted sales invoice because no unused posted credit memo numbers are available. \\You must extend the range of number series for posted credit memos.';
      SalesLineFromOrderCorrectErr@1006 : TextConst '@@@="%1 = Item no. %2 = Item description";ENU=You cannot correct this posted sales invoice because item %1 %2 is used on a sales order.;ESM=No puede corregir esta factura de venta registrada porque el producto %1 %2 se usa en un pedido de venta.;FRC=Vous ne pouvez pas corriger cette facture vente report‚e car l''article %1 %2 est utilis‚ dans un document de vente.;ENC=You cannot correct this posted sales invoice because item %1 %2 is used on a sales order.';
      SalesLineFromOrderCancelErr@1030 : TextConst '@@@="%1 = Item no. %2 = Item description";ENU=You cannot cancel this posted sales invoice because item %1 %2 is used on a sales order.;ESM=No puede cancelar esta factura de venta registrada porque el producto %1 %2 se usa en un pedido de venta.;FRC=Vous ne pouvez pas annuler cette facture vente report‚e car l''article %1 %2 est utilis‚ dans un document de vente.;ENC=You cannot cancel this posted sales invoice because item %1 %2 is used on a sales order.';
      ShippedQtyReturnedCorrectErr@1007 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot correct this posted sales invoice because item %1 %2 has already been fully or partially returned.;ESM=No puede corregir esta factura de venta registrada porque el producto %1 %2 se ha devuelto total o parcialmente.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car l''article %1 %2 a d‚j… ‚t‚ entiŠrement ou partiellement retourn‚.;ENC=You cannot correct this posted sales invoice because item %1 %2 has already been fully or partially returned.';
      ShippedQtyReturnedCancelErr@1031 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot cancel this posted sales invoice because item %1 %2 has already been fully or partially returned.;ESM=No puede cancelar esta factura de venta registrada porque el producto %1 %2 se ha devuelto total o parcialmente.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car l''article %1 %2 a d‚j… ‚t‚ entiŠrement ou partiellement retourn‚.;ENC=You cannot cancel this posted sales invoice because item %1 %2 has already been fully or partially returned.';
      UsedInJobCorrectErr@1008 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot correct this posted sales invoice because item %1 %2 is used in a job.;ESM=No puede corregir esta factura de venta registrada porque el producto %1 %2 se usa en un proyecto.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car l''article %1 %2 est utilis‚ dans un projet.;ENC=You cannot correct this posted sales invoice because item %1 %2 is used in a job.';
      UsedInJobCancelErr@1032 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot cancel this posted sales invoice because item %1 %2 is used in a job.;ESM=No puede cancelar esta factura de venta registrada porque el producto %1 %2 se usa en un proyecto.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car l''article %1 %2 est utilis‚ dans un projet.;ENC=You cannot cancel this posted sales invoice because item %1 %2 is used in a job.';
      PostingNotAllowedCorrectErr@1009 : TextConst 'ENU=You cannot correct this posted sales invoice because it was posted in a posting period that is closed.;ESM=No puede corregir esta factura de venta registrada porque se registr¢ en un per¡odo de registro que est  cerrado.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car elle a ‚t‚ report‚e au cours d''une p‚riode qui est maintenant cl“tur‚e.;ENC=You cannot correct this posted sales invoice because it was posted in a posting period that is closed.';
      PostingNotAllowedCancelErr@1033 : TextConst 'ENU=You cannot cancel this posted sales invoice because it was posted in a posting period that is closed.;ESM=No puede cancelar esta factura de venta registrada porque se registr¢ en un per¡odo de registro que est  cerrado.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car elle a ‚t‚ report‚e au cours d''une p‚riode qui est maintenant cl“tur‚e.;ENC=You cannot cancel this posted sales invoice because it was posted in a posting period that is closed.';
      InvoiceIsBasedOnOrderCorrectErr@1010 : TextConst 'ENU=You cannot correct this posted sales invoice because the invoice is based on a sales order.;ESM=No puede corregir esta factura de venta registrada porque la factura se basa en un pedido de venta.;FRC=Vous ne pouvez pas corriger cette facture vente report‚e car elle est bas‚e sur un document de vente.;ENC=You cannot correct this posted sales invoice because the invoice is based on a sales order.';
      InvoiceIsBasedOnOrderCancelErr@1034 : TextConst 'ENU=You cannot cancel this posted sales invoice because the invoice is based on a sales order.;ESM=No puede cancelar esta factura de venta registrada porque la factura se basa en un pedido de venta.;FRC=Vous ne pouvez pas annuler cette facture vente report‚e car elle est bas‚e sur un document de vente.;ENC=You cannot cancel this posted sales invoice because the invoice is based on a sales order.';
      LineTypeNotAllowedCorrectErr@1012 : TextConst '@@@="%1 = Item no. %2 = Item description %3 = Item type.";ENU=You cannot correct this posted sales invoice because the sales invoice line for %1 %2 is of type %3, which is not allowed on a simplified sales invoice.;ESM=No puede corregir esta factura de venta registrada porque la l¡nea de la factura de venta para %1 %2 es de tipo %3, que no se permite en una factura de venta simplificada.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car la ligne de facture de vente de %1 %2 est de type %3, ce qui n''est pas autoris‚ sur une facture de vente simplifi‚e.;ENC=You cannot correct this posted sales invoice because the sales invoice line for %1 %2 is of type %3, which is not allowed on a simplified sales invoice.';
      LineTypeNotAllowedCancelErr@1036 : TextConst '@@@="%1 = Item no. %2 = Item description %3 = Item type.";ENU=You cannot cancel this posted sales invoice because the sales invoice line for %1 %2 is of type %3, which is not allowed on a simplified sales invoice.;ESM=No puede cancelar esta factura de venta registrada porque la l¡nea de la factura de venta para %1 %2 es de tipo %3, que no se permite en una factura de venta simplificada.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car la ligne de facture de vente de %1 %2 est de type %3, ce qui n''est pas autoris‚ sur une facture de vente simplifi‚e.;ENC=You cannot cancel this posted sales invoice because the sales invoice line for %1 %2 is of type %3, which is not allowed on a simplified sales invoice.';
      CancellingOnly@1014 : Boolean;
      InvalidDimCodeCorrectErr@1037 : TextConst '@@@="%1 = Table caption %2 = Account number %3 = Item no. %4 = Item description.";ENU=You cannot correct this posted sales invoice because the dimension rule setup for account ''%1'' %2 prevents %3 %4 from being canceled.;ESM=No puede corregir esta factura de venta registrada porque la configuraci¢n de reglas de dimensiones de la cuenta ''%1'' %2 impide que se cancele %3 %4.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car la configuration de la rŠgle de dimension pour le compte ®ÿ%1ÿ¯ %2 empˆche l''annulation de %3 %4.;ENC=You cannot correct this posted sales invoice because the dimension rule setup for account ''%1'' %2 prevents %3 %4 from being cancelled.';
      InvalidDimCodeCancelErr@1038 : TextConst '@@@="%1 = Table caption %2 = Account number %3 = Item no. %4 = Item description.";ENU=You cannot cancel this posted sales invoice because the dimension rule setup for account ''%1'' %2 prevent %3 %4 from being canceled.;ESM=No puede cancelar esta factura de venta registrada porque la configuraci¢n de reglas de dimensiones de la cuenta ''%1'' %2 impide que se cancele %3 %4.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car la configuration de la rŠgle de dimension pour le compte ®ÿ%1ÿ¯ %2 empˆche l''annulation de %3 %4.;ENC=You cannot cancel this posted sales invoice because the dimension rule setup for account ''%1'' %2 prevent %3 %4 from being cancelled.';
      InvalidDimCombinationCorrectErr@1023 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot correct this posted sales invoice because the dimension combination for item %1 %2 is not allowed.;ESM=No puede corregir esta factura de venta registrada porque la combinaci¢n de dimensiones para el producto %1 %2 no est  permitida.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car la combinaison de dimensions pour l''article %1 %2 n''est pas autoris‚e.;ENC=You cannot correct this posted sales invoice because the dimension combination for item %1 %2 is not allowed.';
      InvalidDimCombinationCancelErr@1039 : TextConst '@@@="%1 = Item no. %2 = Item description.";ENU=You cannot cancel this posted sales invoice because the dimension combination for item %1 %2 is not allowed.;ESM=No puede cancelar esta factura de venta registrada porque la combinaci¢n de dimensiones para el producto %1 %2 no est  permitida.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car la combinaison de dimensions pour l''article %1 %2 n''est pas autoris‚e.;ENC=You cannot cancel this posted sales invoice because the dimension combination for item %1 %2 is not allowed.';
      InvalidDimCombHeaderCorrectErr@1011 : TextConst 'ENU=You cannot correct this posted sales invoice because the combination of dimensions on the invoice is blocked.;ESM=No puede corregir esta factura de venta registrada porque la combinaci¢n de dimensiones de la factura est  bloqueada.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car la combinaison de dimensions sur la facture est bloqu‚e.;ENC=You cannot correct this posted sales invoice because the combination of dimensions on the invoice is blocked.';
      InvalidDimCombHeaderCancelErr@1035 : TextConst 'ENU=You cannot cancel this posted sales invoice because the combination of dimensions on the invoice is blocked.;ESM=No puede cancelar esta factura de venta registrada porque la combinaci¢n de dimensiones de la factura est  bloqueada.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car la combinaison de dimensions sur la facture est bloqu‚e.;ENC=You cannot cancel this posted sales invoice because the combination of dimensions on the invoice is blocked.';
      ExternalDocCorrectErr@1015 : TextConst 'ENU=You cannot correct this posted sales invoice because the external document number is required on the invoice.;ESM=No puede corregir esta factura de venta registrada porque el n£mero de documento externo se requiere en la factura.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car le num‚ro de document externe est obligatoire sur la facture.;ENC=You cannot correct this posted sales invoice because the external document number is required on the invoice.';
      ExternalDocCancelErr@1040 : TextConst 'ENU=You cannot cancel this posted sales invoice because the external document number is required on the invoice.;ESM=No puede cancelar esta factura de venta registrada porque el n£mero de documento externo se requiere en la factura.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car le num‚ro de document externe est obligatoire sur la facture.;ENC=You cannot cancel this posted sales invoice because the external document number is required on the invoice.';
      InventoryPostClosedCorrectErr@1041 : TextConst 'ENU=You cannot correct this posted sales invoice because the posting inventory period is already closed.;ESM=No puede corregir esta factura de venta registrada porque el per¡odo de inventario de registro ya est  cerrado.;FRC=Vous ne pouvez pas corriger cette facture de vente report‚e car la p‚riode d''inventaire de report est d‚j… cl“tur‚e.;ENC=You cannot correct this posted sales invoice because the posting inventory period is already closed.';
      InventoryPostClosedCancelErr@1042 : TextConst 'ENU=You cannot cancel this posted sales invoice because the posting inventory period is already closed.;ESM=No puede cancelar esta factura de venta registrada porque el per¡odo de inventario de registro ya est  cerrado.;FRC=Vous ne pouvez pas annuler cette facture de vente report‚e car la p‚riode d''inventaire de report est d‚j… cl“tur‚e.;ENC=You cannot cancel this posted sales invoice because the posting inventory period is already closed.';
      PostingCreditMemoFailedOpenPostedCMQst@1020 : TextConst 'ENU=Canceling the invoice failed because of the following error: \\%1\\A credit memo is posted. Do you want to open the posted credit memo?;ESM=No se pudo cancelar la factura debido al siguiente error: \\%1\\Se ha registrado una nota de cr‚dito. ¨Desea abrir la nota cr‚dito regis.?;FRC=L''annulation de la facture a ‚chou‚ en raison de l''erreur suivante: \\%1\\Une note de cr‚dit est report‚e. Voulez-vous ouvrir la note de cr‚dit report‚e?;ENC=Cancelling the invoice failed because of the following error: \\%1\\A credit memo is posted. Do you want to open the posted credit memo?';
      PostingCreditMemoFailedOpenCMQst@1021 : TextConst 'ENU=Canceling the invoice failed because of the following error: \\%1\\A credit memo is created but not posted. Do you want to open the credit memo?;ESM=No se pudo cancelar la factura debido al siguiente error: \\%1\\Se ha creado una nota de cr‚dito pero no se ha registrado. ¨Desea abrir la nota de cr‚dito?;FRC=L''annulation de la facture a ‚chou‚ en raison de l''erreur suivanteÿ: \\%1\\Une note de cr‚dit est cr‚‚e mais pas report‚e. Voulez-vous ouvrir la note de cr‚dit?;ENC=Cancelling the invoice failed because of the following error: \\%1\\A credit memo is created but not posted. Do you want to open the credit memo?';
      CreatingCreditMemoFailedNothingCreatedErr@1022 : TextConst 'ENU=Canceling the invoice failed because of the following error: \\%1.;ESM=No se pudo cancelar la factura debido al siguiente error: \\%1.;FRC=L''annulation de la facture a ‚chou‚ en raison de l''erreur suivanteÿ: \\%1.;ENC=Cancelling the invoice failed because of the following error: \\%1.';
      ErrorType@1024 : 'IsPaid,CustomerBlocked,ItemBlocked,AccountBlocked,IsCorrected,SerieNumInv,SerieNumCM,SerieNumPostCM,ItemIsReturned,FromOrder,PostingNotAllowed,LineFromOrder,WrongItemType,LineFromJob,DimErr,DimCombErr,DimCombHeaderErr,ExtDocErr,InventoryPostClosed';
      WrongDocumentTypeForCopyDocumentErr@1043 : TextConst 'ENU=Document Type for sales header is not implemented for correction.;ESM=No se ha implementado el tipo de documento en la cabecera de ventas para su correcci¢n.;FRC=Le type Document pour l''en-tˆte vente n''est pas impl‚ment‚ pour la correction.;ENC=Document Type for sales header is not implemented for correction.';

    PROCEDURE CancelPostedInvoice@4(VAR SalesInvoiceHeader@1000 : Record 112) : Boolean;
    BEGIN
      CancellingOnly := TRUE;
      EXIT(CreateCreditMemo(SalesInvoiceHeader));
    END;

    LOCAL PROCEDURE CreateCreditMemo@13(VAR SalesInvoiceHeader@1000 : Record 112) : Boolean;
    VAR
      SalesHeader@1004 : Record 36;
      SalesCrMemoHeader@1005 : Record 114;
    BEGIN
      TestCorrectInvoiceIsAllowed(SalesInvoiceHeader,CancellingOnly);
      IF NOT CODEUNIT.RUN(CODEUNIT::"Correct Posted Sales Invoice",SalesInvoiceHeader) THEN BEGIN
        SalesCrMemoHeader.SETRANGE("Applies-to Doc. No.",SalesInvoiceHeader."No.");
        IF SalesCrMemoHeader.FINDFIRST THEN BEGIN
          IF CONFIRM(STRSUBSTNO(PostingCreditMemoFailedOpenPostedCMQst,GETLASTERRORTEXT)) THEN
            PAGE.RUN(PAGE::"Mini Posted Sales Credit Memo",SalesCrMemoHeader);
        END ELSE BEGIN
          SalesHeader.SETRANGE("Applies-to Doc. No.",SalesInvoiceHeader."No.");
          IF SalesHeader.FINDFIRST THEN BEGIN
            IF CONFIRM(STRSUBSTNO(PostingCreditMemoFailedOpenCMQst,GETLASTERRORTEXT)) THEN
              PAGE.RUN(PAGE::"Mini Sales Credit Memo",SalesHeader);
          END ELSE
            ERROR(CreatingCreditMemoFailedNothingCreatedErr,GETLASTERRORTEXT);
        END;
        EXIT(FALSE);
      END;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE CreateCopyDocument@11(VAR SalesInvoiceHeader@1000 : Record 112;VAR SalesHeader@1001 : Record 36;DocumentType@1002 : Option);
    VAR
      CopyDocMgt@1003 : Codeunit 6620;
    BEGIN
      CLEAR(SalesHeader);
      SalesHeader."No." := '';
      SalesHeader."Document Type" := DocumentType;
      SalesHeader.INSERT(TRUE);

      CASE DocumentType OF
        SalesHeader."Document Type"::"Credit Memo":
          CopyDocMgt.SetPropertiesForCreditMemoCorrection;
        SalesHeader."Document Type"::Invoice:
          CopyDocMgt.SetPropertiesForInvoiceCorrection;
        ELSE
          ERROR(WrongDocumentTypeForCopyDocumentErr);
      END;

      CopyDocMgt.CopySalesDocForInvoiceCancelling(SalesInvoiceHeader."No.",SalesHeader);
    END;

    PROCEDURE CreateCreditMemoCopyDocument@16(VAR SalesInvoiceHeader@1000 : Record 112;VAR SalesHeader@1001 : Record 36);
    BEGIN
      CreateCopyDocument(SalesInvoiceHeader,SalesHeader,SalesHeader."Document Type"::"Credit Memo");
    END;

    PROCEDURE CancelPostedInvoiceStartNewInvoice@1(VAR SalesInvoiceHeader@1000 : Record 112;VAR SalesHeader@1002 : Record 36);
    BEGIN
      CancellingOnly := FALSE;

      IF CreateCreditMemo(SalesInvoiceHeader) THEN BEGIN
        CreateCopyDocument(SalesInvoiceHeader,SalesHeader,SalesHeader."Document Type"::Invoice);
        COMMIT;
      END;
    END;

    PROCEDURE TestCorrectInvoiceIsAllowed@5(VAR SalesInvoiceHeader@1000 : Record 112;Cancelling@1001 : Boolean);
    BEGIN
      CancellingOnly := Cancelling;

      TestIfPostingIsAllowed(SalesInvoiceHeader);
      TestIfInvoiceIsCorrectedOnce(SalesInvoiceHeader);
      TestIfInvoiceIsPaid(SalesInvoiceHeader);
      TestIfCustomerIsBlocked(SalesInvoiceHeader,SalesInvoiceHeader."Sell-to Customer No.");
      TestIfCustomerIsBlocked(SalesInvoiceHeader,SalesInvoiceHeader."Bill-to Customer No.");
      TestCustomerDimension(SalesInvoiceHeader,SalesInvoiceHeader."Bill-to Customer No.");
      TestDimensionOnHeader(SalesInvoiceHeader);
      TestSalesLines(SalesInvoiceHeader);
      TestIfAnyFreeNumberSeries(SalesInvoiceHeader);
      TestIfInvoiceIsBasedOnOrder(SalesInvoiceHeader);
      TestExternalDocument(SalesInvoiceHeader);
      TestInventoryPostingClosed(SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE SetTrackInfoForCancellation@2(VAR SalesInvoiceHeader@1000 : Record 112);
    VAR
      SalesCrMemoHeader@1001 : Record 114;
    BEGIN
      SalesCrMemoHeader.SETRANGE("Applies-to Doc. No.",SalesInvoiceHeader."No.");
      IF SalesCrMemoHeader.FINDFIRST THEN BEGIN
        SalesInvoiceHeader.VALIDATE("Canceled By",SalesCrMemoHeader."No.");
        SalesInvoiceHeader.MODIFY;

        SalesCrMemoHeader.VALIDATE(Canceled,TRUE);
        SalesCrMemoHeader.MODIFY;
      END;
    END;

    LOCAL PROCEDURE TestDimensionOnHeader@15(SalesInvoiceHeader@1000 : Record 112);
    VAR
      DimensionManagement@1001 : Codeunit 408;
    BEGIN
      IF NOT DimensionManagement.CheckDimIDComb(SalesInvoiceHeader."Dimension Set ID") THEN
        ErrorHelperHeader(ErrorType::DimCombHeaderErr,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestIfCustomerIsBlocked@3(SalesInvoiceHeader@1005 : Record 112;CustNo@1000 : Code[20]);
    VAR
      Customer@1001 : Record 18;
    BEGIN
      Customer.GET(CustNo);
      IF Customer.Blocked IN [Customer.Blocked::Invoice,Customer.Blocked::All] THEN
        ErrorHelperHeader(ErrorType::CustomerBlocked,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestCustomerDimension@9(SalesInvoiceHeader@1005 : Record 112;CustNo@1000 : Code[20]);
    VAR
      Customer@1001 : Record 18;
      DimensionManagement@1004 : Codeunit 408;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      Customer.GET(CustNo);
      TableID[1] := DATABASE::Customer;
      No[1] := Customer."No.";
      IF NOT DimensionManagement.CheckDimValuePosting(TableID,No,SalesInvoiceHeader."Dimension Set ID") THEN
        ErrorHelperAccount(ErrorType::DimErr,Customer.TABLECAPTION,Customer."No.",Customer."No.",Customer.Name);
    END;

    LOCAL PROCEDURE TestSalesLines@6(SalesInvoiceHeader@1000 : Record 112);
    VAR
      SalesShipmentLine@1004 : Record 111;
      SalesInvoiceLine@1001 : Record 113;
      Item@1002 : Record 27;
      InventoryPostingSetup@1011 : Record 5813;
      GeneralPostingSetup@1010 : Record 252;
      CustomerPostingGroup@1009 : Record 92;
      VATPostingSetup@1008 : Record 325;
      DimensionManagement@1007 : Codeunit 408;
      ShippedQtyNoReturned@1005 : Decimal;
      RevUnitCostLCY@1006 : Decimal;
      TableID@1013 : ARRAY [10] OF Integer;
      No@1014 : ARRAY [10] OF Code[20];
    BEGIN
      SalesInvoiceLine.SETRANGE("Document No.",SalesInvoiceHeader."No.");
      IF SalesInvoiceLine.FIND('-') THEN
        REPEAT
          IF NOT IsCommentLine(SalesInvoiceLine) THEN BEGIN
            IF SalesShipmentLine.GET(SalesInvoiceLine."Shipment No.",SalesInvoiceLine."Shipment Line No.") THEN BEGIN
              IF SalesShipmentLine."Order No." <> '' THEN
                ErrorHelperLine(ErrorType::LineFromOrder,SalesInvoiceLine);
            END;

            IF (SalesInvoiceLine.Type <> SalesInvoiceLine.Type::" ") AND (SalesInvoiceLine.Type <> SalesInvoiceLine.Type::Item) THEN
              ErrorHelperLine(ErrorType::WrongItemType,SalesInvoiceLine);

            IF SalesInvoiceLine.Quantity > 0 THEN BEGIN
              SalesInvoiceLine.CalcShippedSaleNotReturned(ShippedQtyNoReturned,RevUnitCostLCY,FALSE);
              IF SalesInvoiceLine.Quantity <> ShippedQtyNoReturned THEN
                ErrorHelperLine(ErrorType::ItemIsReturned,SalesInvoiceLine);
            END;

            IF SalesInvoiceLine."Job No." <> '' THEN
              ErrorHelperLine(ErrorType::LineFromJob,SalesInvoiceLine);

            Item.GET(SalesInvoiceLine."No.");

            IF Item.Blocked THEN
              ErrorHelperLine(ErrorType::ItemBlocked,SalesInvoiceLine);

            TableID[1] := DATABASE::Item;
            No[1] := SalesInvoiceLine."No.";
            IF NOT DimensionManagement.CheckDimValuePosting(TableID,No,SalesInvoiceLine."Dimension Set ID") THEN
              ErrorHelperAccount(ErrorType::DimErr,Item.TABLECAPTION,No[1],Item."No.",Item.Description);

            IF Item.Type = Item.Type::Inventory THEN BEGIN
              InventoryPostingSetup.GET(SalesInvoiceLine."Location Code",SalesInvoiceLine."Posting Group");
              TestGLAccount(InventoryPostingSetup."Inventory Account",SalesInvoiceLine);
            END;

            GeneralPostingSetup.GET(SalesInvoiceLine."Gen. Bus. Posting Group",SalesInvoiceLine."Gen. Prod. Posting Group");
            TestGLAccount(GeneralPostingSetup."Sales Account",SalesInvoiceLine);
            TestGLAccount(GeneralPostingSetup."Sales Credit Memo Account",SalesInvoiceLine);
            TestGLAccount(GeneralPostingSetup."COGS Account",SalesInvoiceLine);
            TestGLAccount(GeneralPostingSetup."Sales Line Disc. Account",SalesInvoiceLine);

            CustomerPostingGroup.GET(SalesInvoiceHeader."Customer Posting Group");
            TestGLAccount(CustomerPostingGroup."Receivables Account",SalesInvoiceLine);

            VATPostingSetup.GET(SalesInvoiceLine."VAT Bus. Posting Group",SalesInvoiceLine."VAT Prod. Posting Group");

            TestGLAccount(VATPostingSetup."Sales VAT Account",SalesInvoiceLine);

            IF NOT DimensionManagement.CheckDimIDComb(SalesInvoiceLine."Dimension Set ID") THEN
              ErrorHelperLine(ErrorType::DimCombErr,SalesInvoiceLine);
          END;
        UNTIL SalesInvoiceLine.NEXT = 0;
    END;

    LOCAL PROCEDURE TestGLAccount@21(AccountNo@1000 : Code[20];SalesInvoiceLine@1005 : Record 113);
    VAR
      GLAccount@1001 : Record 15;
      Item@1006 : Record 27;
      DimensionManagement@1004 : Codeunit 408;
      TableID@1002 : ARRAY [10] OF Integer;
      No@1003 : ARRAY [10] OF Code[20];
    BEGIN
      GLAccount.GET(AccountNo);
      IF GLAccount.Blocked THEN
        ErrorHelperAccount(ErrorType::AccountBlocked,GLAccount.TABLECAPTION,AccountNo,'','');
      TableID[1] := DATABASE::"G/L Account";
      No[1] := AccountNo;
      Item.GET(SalesInvoiceLine."No.");
      IF NOT DimensionManagement.CheckDimValuePosting(TableID,No,SalesInvoiceLine."Dimension Set ID") THEN
        ErrorHelperAccount(ErrorType::DimErr,GLAccount.TABLECAPTION,AccountNo,Item."No.",Item.Description);
    END;

    LOCAL PROCEDURE TestIfInvoiceIsPaid@7(SalesInvoiceHeader@1000 : Record 112);
    BEGIN
      SalesInvoiceHeader.CALCFIELDS("Amount Including VAT");
      SalesInvoiceHeader.CALCFIELDS("Remaining Amount");
      IF SalesInvoiceHeader."Amount Including VAT" <> SalesInvoiceHeader."Remaining Amount" THEN
        ErrorHelperHeader(ErrorType::IsPaid,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestIfInvoiceIsCorrectedOnce@10(SalesInvoiceHeader@1000 : Record 112);
    BEGIN
      IF SalesInvoiceHeader."Canceled By" <> '' THEN
        ErrorHelperHeader(ErrorType::IsCorrected,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestIfPostingIsAllowed@12(SalesInvoiceHeader@1000 : Record 112);
    VAR
      GenJnlCheckLine@1001 : Codeunit 11;
    BEGIN
      IF GenJnlCheckLine.DateNotAllowed(SalesInvoiceHeader."Posting Date") THEN
        ErrorHelperHeader(ErrorType::PostingNotAllowed,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestIfAnyFreeNumberSeries@14(SalesInvoiceHeader@1003 : Record 112);
    VAR
      SalesReceivablesSetup@1001 : Record 311;
      NoSeriesManagement@1002 : Codeunit 396;
      PostingDate@1000 : Date;
    BEGIN
      PostingDate := WORKDATE;
      SalesReceivablesSetup.GET;

      IF NoSeriesManagement.TryGetNextNo(SalesReceivablesSetup."Credit Memo Nos.",PostingDate) = '' THEN
        ErrorHelperHeader(ErrorType::SerieNumCM,SalesInvoiceHeader);

      IF NoSeriesManagement.TryGetNextNo(SalesReceivablesSetup."Posted Credit Memo Nos.",PostingDate) = '' THEN
        ErrorHelperHeader(ErrorType::SerieNumPostCM,SalesInvoiceHeader);

      IF (NOT CancellingOnly) AND (NoSeriesManagement.TryGetNextNo(SalesReceivablesSetup."Invoice Nos.",PostingDate) = '') THEN
        ErrorHelperHeader(ErrorType::SerieNumInv,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestIfInvoiceIsBasedOnOrder@17(SalesInvoiceHeader@1000 : Record 112);
    BEGIN
      IF SalesInvoiceHeader."Order No." <> '' THEN
        ErrorHelperHeader(ErrorType::FromOrder,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestExternalDocument@8(SalesInvoiceHeader@1000 : Record 112);
    VAR
      SalesReceivablesSetup@1001 : Record 311;
    BEGIN
      SalesReceivablesSetup.GET;
      IF (SalesInvoiceHeader."External Document No." = '') AND SalesReceivablesSetup."Ext. Doc. No. Mandatory" THEN
        ErrorHelperHeader(ErrorType::ExtDocErr,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE TestInventoryPostingClosed@26(SalesInvoiceHeader@1000 : Record 112);
    VAR
      InventoryPeriod@1001 : Record 5814;
    BEGIN
      InventoryPeriod.SETRANGE(Closed,TRUE);
      InventoryPeriod.SETFILTER("Ending Date",'>=%1',SalesInvoiceHeader."Posting Date");
      IF InventoryPeriod.FINDFIRST THEN
        ErrorHelperHeader(ErrorType::InventoryPostClosed,SalesInvoiceHeader);
    END;

    LOCAL PROCEDURE IsCommentLine@18(SalesInvoiceLine@1000 : Record 113) : Boolean;
    BEGIN
      EXIT((SalesInvoiceLine.Type = SalesInvoiceLine.Type::" ") OR (SalesInvoiceLine."No." = ''));
    END;

    LOCAL PROCEDURE ErrorHelperHeader@22(ErrorOption@1000 : Option;SalesInvoiceHeader@1001 : Record 112);
    VAR
      Customer@1003 : Record 18;
    BEGIN
      IF CancellingOnly THEN
        CASE ErrorOption OF
          ErrorType::IsPaid:
            ERROR(PostedInvoiceIsPaidCCancelErr);
          ErrorType::CustomerBlocked:
            BEGIN
              Customer.GET(SalesInvoiceHeader."Bill-to Customer No.");
              ERROR(CustomerIsBlockedCancelErr,Customer.Name);
            END;
          ErrorType::IsCorrected:
            ERROR(AlreadyCancelledErr);
          ErrorType::SerieNumInv:
            ERROR(NoFreeInvoiceNoSeriesCancelErr);
          ErrorType::SerieNumCM:
            ERROR(NoFreeCMSeriesCancelErr);
          ErrorType::SerieNumPostCM:
            ERROR(NoFreePostCMSeriesCancelErr);
          ErrorType::FromOrder:
            ERROR(InvoiceIsBasedOnOrderCancelErr);
          ErrorType::PostingNotAllowed:
            ERROR(PostingNotAllowedCancelErr);
          ErrorType::ExtDocErr:
            ERROR(ExternalDocCancelErr);
          ErrorType::InventoryPostClosed:
            ERROR(InventoryPostClosedCancelErr);
          ErrorType::DimCombHeaderErr:
            ERROR(InvalidDimCombHeaderCancelErr);
        END
      ELSE
        CASE ErrorOption OF
          ErrorType::IsPaid:
            ERROR(PostedInvoiceIsPaidCorrectErr);
          ErrorType::CustomerBlocked:
            BEGIN
              Customer.GET(SalesInvoiceHeader."Bill-to Customer No.");
              ERROR(CustomerIsBlockedCorrectErr,Customer.Name);
            END;
          ErrorType::IsCorrected:
            ERROR(AlreadyCorrectedErr);
          ErrorType::SerieNumInv:
            ERROR(NoFreeInvoiceNoSeriesCorrectErr);
          ErrorType::SerieNumPostCM:
            ERROR(NoFreePostCMSeriesCorrectErr);
          ErrorType::SerieNumCM:
            ERROR(NoFreeCMSeriesCorrectErr);
          ErrorType::FromOrder:
            ERROR(InvoiceIsBasedOnOrderCorrectErr);
          ErrorType::PostingNotAllowed:
            ERROR(PostingNotAllowedCorrectErr);
          ErrorType::ExtDocErr:
            ERROR(ExternalDocCorrectErr);
          ErrorType::InventoryPostClosed:
            ERROR(InventoryPostClosedCorrectErr);
          ErrorType::DimCombHeaderErr:
            ERROR(InvalidDimCombHeaderCorrectErr);
        END;
    END;

    LOCAL PROCEDURE ErrorHelperLine@23(ErrorOption@1000 : Option;SalesInvoiceLine@1001 : Record 113);
    VAR
      Item@1002 : Record 27;
    BEGIN
      IF CancellingOnly THEN
        CASE ErrorOption OF
          ErrorType::ItemBlocked:
            BEGIN
              Item.GET(SalesInvoiceLine."No.");
              ERROR(ItemIsBlockedCancelErr,Item."No.",Item.Description);
            END;
          ErrorType::ItemIsReturned:
            BEGIN
              Item.GET(SalesInvoiceLine."No.");
              ERROR(ShippedQtyReturnedCancelErr,Item."No.",Item.Description);
            END;
          ErrorType::LineFromOrder:
            ERROR(SalesLineFromOrderCancelErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description);
          ErrorType::WrongItemType:
            ERROR(LineTypeNotAllowedCancelErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description,SalesInvoiceLine.Type);
          ErrorType::LineFromJob:
            ERROR(UsedInJobCancelErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description);
          ErrorType::DimCombErr:
            ERROR(InvalidDimCombinationCancelErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description);
        END
      ELSE
        CASE ErrorOption OF
          ErrorType::ItemBlocked:
            BEGIN
              Item.GET(SalesInvoiceLine."No.");
              ERROR(ItemIsBlockedCorrectErr,Item."No.",Item.Description);
            END;
          ErrorType::ItemIsReturned:
            BEGIN
              Item.GET(SalesInvoiceLine."No.");
              ERROR(ShippedQtyReturnedCorrectErr,Item."No.",Item.Description);
            END;
          ErrorType::LineFromOrder:
            ERROR(SalesLineFromOrderCorrectErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description);
          ErrorType::WrongItemType:
            ERROR(LineTypeNotAllowedCorrectErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description,SalesInvoiceLine.Type);
          ErrorType::LineFromJob:
            ERROR(UsedInJobCorrectErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description);
          ErrorType::DimCombErr:
            ERROR(InvalidDimCombinationCorrectErr,SalesInvoiceLine."No.",SalesInvoiceLine.Description);
        END;
    END;

    LOCAL PROCEDURE ErrorHelperAccount@24(ErrorOption@1000 : Option;AccountNo@1001 : Code[20];AccountCaption@1002 : Text;No@1003 : Code[20];Name@1004 : Text);
    BEGIN
      IF CancellingOnly THEN
        CASE ErrorOption OF
          ErrorType::AccountBlocked:
            ERROR(AccountIsBlockedCancelErr,AccountCaption,AccountNo);
          ErrorType::DimErr:
            ERROR(InvalidDimCodeCancelErr,AccountCaption,AccountNo,No,Name);
        END
      ELSE
        CASE ErrorOption OF
          ErrorType::AccountBlocked:
            ERROR(AccountIsBlockedCorrectErr,AccountCaption,AccountNo);
          ErrorType::DimErr:
            ERROR(InvalidDimCodeCorrectErr,AccountCaption,AccountNo,No,Name);
        END;
    END;

    BEGIN
    END.
  }
}

