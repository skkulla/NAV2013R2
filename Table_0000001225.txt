OBJECT Table 1225 Posting Exch. Field Mapping
{
  OBJECT-PROPERTIES
  {
    Date=12/02/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10.00.35800;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               TESTFIELD("Table ID");
               TESTFIELD("Field ID");
               TESTFIELD("Column No.");

               IF IsValidToUseMultiplier AND (Multiplier = 0) THEN
                 VALIDATE(Multiplier,1);
             END;

    OnModify=VAR
               PostingExchColumnDef@1000 : Record 1223;
             BEGIN
               PostingExchColumnDef.GET("Posting Exch. Def Code","Posting Exch. Line Def Code","Column No.");
               IF PostingExchColumnDef."Data Type" <> PostingExchColumnDef."Data Type"::Decimal THEN
                 VALIDATE(Multiplier,0);

               IF IsValidToUseMultiplier AND (Multiplier = 0) THEN
                 VALIDATE(Multiplier,1);
             END;

    CaptionML=[ENU=Posting Exch. Field Mapping;
               ESM=Mapeo campo intercambio registro;
               FRC=Correspondance champ ‚chge report;
               ENC=Posting Exch. Field Mapping];
  }
  FIELDS
  {
    { 1   ;   ;Posting Exch. Def Code;Code20      ;TableRelation="Posting Exch. Def".Code;
                                                   CaptionML=[ENU=Posting Exch. Def Code;
                                                              ESM=C¢digo def. intercambio registro;
                                                              FRC=Code appellation ‚chge report;
                                                              ENC=Posting Exch. Def Code] }
    { 2   ;   ;Table ID            ;Integer       ;TableRelation="Posting Exch. Mapping"."Table ID";
                                                   CaptionML=[ENU=Table ID;
                                                              ESM=Id. tabla;
                                                              FRC=Code table;
                                                              ENC=Table ID] }
    { 3   ;   ;Column No.          ;Integer       ;TableRelation="Posting Exch. Column Def"."Column No." WHERE (Posting Exch. Def Code=FIELD(Posting Exch. Def Code),
                                                                                                                Posting Exch. Line Def Code=FIELD(Posting Exch. Line Def Code));
                                                   ValidateTableRelation=No;
                                                   CaptionML=[ENU=Column No.;
                                                              ESM=N§ columna;
                                                              FRC=Nø de colonne;
                                                              ENC=Column No.] }
    { 4   ;   ;Field ID            ;Integer       ;TableRelation=Field.No. WHERE (TableNo=FIELD(Table ID));
                                                   CaptionML=[ENU=Field ID;
                                                              ESM=Id. campo;
                                                              FRC=Code champ;
                                                              ENC=Field ID] }
    { 5   ;   ;Optional            ;Boolean       ;CaptionML=[ENU=Optional;
                                                              ESM=Opcional;
                                                              FRC=En option;
                                                              ENC=Optional] }
    { 6   ;   ;Use Default Value   ;Boolean       ;OnValidate=VAR
                                                                PostingExchDef@1000 : Record 1222;
                                                              BEGIN
                                                                IF "Use Default Value" THEN BEGIN
                                                                  PostingExchDef.GET("Posting Exch. Def Code");
                                                                  PostingExchDef.TESTFIELD(Type,PostingExchDef.Type::"Payment Export");
                                                                END ELSE
                                                                  "Default Value" := '';
                                                              END;

                                                   CaptionML=[ENU=Use Default Value;
                                                              ESM=Usar valor predeterminado;
                                                              FRC=Utiliser valeur par d‚faut;
                                                              ENC=Use Default Value] }
    { 7   ;   ;Default Value       ;Text250       ;OnValidate=BEGIN
                                                                VALIDATE("Use Default Value",TRUE);
                                                              END;

                                                   CaptionML=[ENU=Default Value;
                                                              ESM=Valor predeterminado;
                                                              FRC=Valeur par d‚faut;
                                                              ENC=Default Value] }
    { 8   ;   ;Posting Exch. Line Def Code;Code20 ;TableRelation="Posting Exch. Line Def".Code WHERE (Posting Exch. Def Code=FIELD(Posting Exch. Def Code));
                                                   CaptionML=[ENU=Posting Exch. Line Def Code;
                                                              ESM=C¢digo def. l¡nea intercambio registro;
                                                              FRC=Code appellation ligne ‚chge report;
                                                              ENC=Posting Exch. Line Def Code] }
    { 9   ;   ;Multiplier          ;Decimal       ;InitValue=1;
                                                   OnValidate=BEGIN
                                                                IF IsValidToUseMultiplier AND (Multiplier = 0) THEN
                                                                  ERROR(ZeroNotAllowedErr);
                                                              END;

                                                   CaptionML=[ENU=Multiplier;
                                                              ESM=Multiplicador;
                                                              FRC=Multiplicateur;
                                                              ENC=Multiplier] }
  }
  KEYS
  {
    {    ;Posting Exch. Def Code,Posting Exch. Line Def Code,Table ID,Column No.;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ZeroNotAllowedErr@1000 : TextConst 'ENU=All numeric values are allowed except zero.;ESM=Se permiten todos los valores num‚ricos excepto cero.;FRC=Toutes les valeurs num‚riques sont autoris‚es, sauf z‚ro.;ENC=All numeric values are allowed except zero.';

    PROCEDURE InsertRec@1(PostingExchDefCode@1003 : Code[20];PostingExchLineDefCode@1005 : Code[20];TableId@1000 : Integer;ColumnNo@1001 : Integer;FieldId@1002 : Integer;Optional@1004 : Boolean;Multiplier@1006 : Decimal);
    BEGIN
      INIT;
      VALIDATE("Posting Exch. Def Code",PostingExchDefCode);
      VALIDATE("Posting Exch. Line Def Code",PostingExchLineDefCode);
      "Table ID" := TableId;
      "Column No." := ColumnNo;
      "Field ID" := FieldId;
      VALIDATE(Optional,Optional);
      VALIDATE(Multiplier,Multiplier);
      INSERT;
    END;

    PROCEDURE FillSourceRecord@2(Field@1000 : Record 2000000041);
    BEGIN
      SETRANGE("Field ID");
      INIT;

      "Table ID" := Field.TableNo;
      "Field ID" := Field."No.";
    END;

    PROCEDURE GetColumnCaption@7() : Text;
    VAR
      postExchColDef@1000 : Record 1223;
    BEGIN
      postExchColDef.SETRANGE("Posting Exch. Def Code","Posting Exch. Def Code");
      postExchColDef.SETRANGE("Posting Exch. Line Def Code","Posting Exch. Line Def Code");
      postExchColDef.SETRANGE("Column No.","Column No.");
      postExchColDef.FINDFIRST;
      EXIT(postExchColDef.Name);
    END;

    PROCEDURE GetFieldCaption@12() : Text;
    VAR
      recRef@1000 : RecordRef;
      fieldRef@1001 : FieldRef;
    BEGIN
      recRef.OPEN("Table ID");
      fieldRef := recRef.FIELD("Field ID");
      EXIT(fieldRef.CAPTION);
    END;

    PROCEDURE SetupFieldMappingDefaults@9(PostingExchMapping@1001 : Record 1224);
    VAR
      PostingExchDef@1000 : Record 1222;
    BEGIN
      "Posting Exch. Def Code" := PostingExchMapping."Posting Exch. Def Code";
      "Posting Exch. Line Def Code" := PostingExchMapping."Posting Exch. Line Def Code";
      PostingExchDef.GET(PostingExchMapping."Posting Exch. Def Code");
      CASE PostingExchDef.Type OF
        PostingExchDef.Type::"Payroll Import":
          BEGIN
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",1,5,0);
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",2,4,0);
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",3,13,1);
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",4,8,0);
          END;
        PostingExchDef.Type::"Bank Statement Import":
          BEGIN
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",1,5,0);
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",2,8,0);
            CreatePostingExchFieldMapping(DATABASE::"Gen. Journal Line",3,13,1);
            CreatePostingExchFieldMapping(DATABASE::"Bank Acc. Reconciliation Line",1,5,0);
            CreatePostingExchFieldMapping(DATABASE::"Bank Acc. Reconciliation Line",2,6,0);
            CreatePostingExchFieldMapping(DATABASE::"Bank Acc. Reconciliation Line",3,7,1);
            CreatePostingExchFieldMapping(DATABASE::"Bank Acc. Reconciliation Line",4,12,0);
          END;
      END;
    END;

    PROCEDURE CreatePostingExchFieldMapping@3(TableID@1000 : Integer;ColumnNo@1001 : Integer;FieldID@1002 : Integer;Multiplier@1003 : Integer);
    BEGIN
      InsertRec("Posting Exch. Def Code","Posting Exch. Line Def Code",TableID,ColumnNo,FieldID,FALSE,Multiplier);
    END;

    LOCAL PROCEDURE IsValidToUseMultiplier@8() : Boolean;
    VAR
      PostingExchDef@1000 : Record 1222;
      PostingExchColumnDef@1001 : Record 1223;
    BEGIN
      PostingExchDef.GET("Posting Exch. Def Code");
      IF PostingExchColumnDef.GET("Posting Exch. Def Code","Posting Exch. Line Def Code","Column No.") THEN
        EXIT(PostingExchColumnDef."Data Type" = PostingExchColumnDef."Data Type"::Decimal);
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

