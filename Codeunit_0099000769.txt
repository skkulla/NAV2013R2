OBJECT Codeunit 99000769 Production BOM-Check
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    TableNo=99000771;
    Permissions=TableData 27=r,
                TableData 99000764=r,
                TableData 99000765=r;
    OnRun=BEGIN
            Code(Rec,'');
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Checking Item           #1########## @2@@@@@@@@@@@@@;ESM=Comprobando producto    #1########## @2@@@@@@@@@@@@@;FRC=V‚rifier l''article           #1########## @2@@@@@@@@@@@@@;ENC=Checking Item           #1########## @2@@@@@@@@@@@@@';
      Text001@1001 : TextConst 'ENU=The maximum number of BOM levels, %1, was exceeded. The process stopped at item number %2, BOM header number %3, BOM level %4.;ESM=Se super¢ el n£mero m ximo de niveles L.M., %1. El proceso se detuvo en el producto n£mero %2, cabecera de la L.M. %3, nivel de L.M. %4.;FRC=Le nombre maximal de niveaux de nomenclature, %1, a ‚t‚ d‚pass‚. Le processus s''est arrˆt‚ au num‚ro d''article %2, num‚ro d''en-tˆte nomenclature %3, niveau de nomenclature %4.;ENC=The maximum number of BOM levels, %1, was exceeded. The process stopped at item number %2, BOM header number %3, BOM level %4.';
      Text003@1002 : TextConst 'ENU=%1 with %2 %3 cannot be found. Check %4 %5 %6 %7.;ESM=No se encuentra %1 con %2 %3. Compruebe %4 %5 %6 %7.;FRC=%1 avec %2 %3 n''a pas ‚t‚ trouv‚. V‚rifiez %4 %5 %6 %7.;ENC=%1 with %2 %3 cannot be found. Check %4 %5 %6 %7.';
      Item@1003 : Record 27;
      ItemUnitOfMeasure@1004 : Record 5404;
      RtngLine@1005 : Record 99000764;
      MfgSetup@1006 : Record 99000765;
      VersionMgt@1007 : Codeunit 99000756;
      CalcLowLevel@1008 : Codeunit 99000793;
      Window@1009 : Dialog;
      NoOfItems@1010 : Integer;
      ItemCounter@1011 : Integer;

    PROCEDURE Code@1(VAR ProdBOMHeader@1000 : Record 99000771;VersionCode@1001 : Code[10]);
    BEGIN
      ProdBOMHeader.TESTFIELD("Unit of Measure Code");
      MfgSetup.GET;
      IF MfgSetup."Dynamic Low-Level Code" THEN BEGIN
        CalcLowLevel.SetActualProdBOM(ProdBOMHeader);
        ProdBOMHeader."Low-Level Code" := CalcLowLevel.CalcLevels(2,ProdBOMHeader."No.",ProdBOMHeader."Low-Level Code",1);
        CalcLowLevel.RecalcLowerLevels(ProdBOMHeader."No.",ProdBOMHeader."Low-Level Code",FALSE);
        ProdBOMHeader.MODIFY;
      END;

      Item.SETCURRENTKEY("Production BOM No.");
      Item.SETRANGE("Production BOM No.",ProdBOMHeader."No.");

      IF Item.FIND('-') THEN BEGIN
        IF GUIALLOWED THEN
          Window.OPEN(Text000);
        NoOfItems := Item.COUNT;
        ItemCounter := 0;
        REPEAT
          ItemCounter := ItemCounter + 1;

          IF GUIALLOWED THEN BEGIN
            Window.UPDATE(1,Item."No.");
            Window.UPDATE(2,ROUND(ItemCounter / NoOfItems * 10000,1));
          END;
          IF MfgSetup."Dynamic Low-Level Code" THEN
            CalcLowLevel.RUN(Item);
          IF Item."Routing No." <> '' THEN
            CheckBOMStructure(ProdBOMHeader."No.",VersionCode,1);
          ItemUnitOfMeasure.GET(Item."No.",ProdBOMHeader."Unit of Measure Code");
        UNTIL Item.NEXT = 0;
      END;
    END;

    PROCEDURE CheckBOMStructure@2(BOMHeaderNo@1000 : Code[20];VersionCode@1001 : Code[10];Level@1002 : Integer);
    VAR
      ProdBOMHeader@1003 : Record 99000771;
      ProdBOMComponent@1004 : Record 99000772;
    BEGIN
      IF Level > 99 THEN
        ERROR(
          Text001,
          99,BOMHeaderNo,Item."Production BOM No.",Level);

      ProdBOMHeader.GET(BOMHeaderNo);

      ProdBOMComponent.SETRANGE("Production BOM No.",BOMHeaderNo);
      ProdBOMComponent.SETRANGE("Version Code",VersionCode);
      ProdBOMComponent.SETFILTER("No.",'<>%1','');

      IF ProdBOMComponent.FIND('-') THEN
        REPEAT
          CASE ProdBOMComponent.Type OF
            ProdBOMComponent.Type::Item:
              IF ProdBOMComponent."Routing Link Code" <> '' THEN BEGIN
                Item.TESTFIELD("Routing No.");
                RtngLine.SETRANGE("Routing No.",Item."Routing No.");
                RtngLine.SETRANGE("Routing Link Code",ProdBOMComponent."Routing Link Code");
                IF NOT RtngLine.FINDFIRST THEN
                  ERROR(
                    Text003,
                    RtngLine.TABLECAPTION,
                    RtngLine.FIELDCAPTION("Routing Link Code"),
                    ProdBOMComponent."Routing Link Code",
                    ProdBOMComponent.FIELDCAPTION("Production BOM No."),
                    ProdBOMComponent."Production BOM No.",
                    ProdBOMComponent.FIELDCAPTION("Line No."),
                    ProdBOMComponent."Line No.");
              END;
            ProdBOMComponent.Type::"Production BOM":
              CheckBOMStructure(
                ProdBOMComponent."No.",
                VersionMgt.GetBOMVersion(ProdBOMComponent."No.",WORKDATE,TRUE),Level + 1);
          END;
        UNTIL ProdBOMComponent.NEXT = 0;
    END;

    PROCEDURE ProdBOMLineCheck@3(ProdBOMNo@1001 : Code[20];VersionCode@1002 : Code[10]);
    VAR
      ProdBOMLine@1000 : Record 99000772;
    BEGIN
      ProdBOMLine.SETRANGE("Production BOM No.",ProdBOMNo);
      ProdBOMLine.SETRANGE("Version Code",VersionCode);
      ProdBOMLine.SETFILTER(Type,'<>%1',ProdBOMLine.Type::" ");
      ProdBOMLine.SETRANGE("No.",'');
      IF ProdBOMLine.FINDFIRST THEN
        ProdBOMLine.FIELDERROR("No.");
    END;

    BEGIN
    END.
  }
}

