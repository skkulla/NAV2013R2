OBJECT Page 10009 Customer Order Header Status
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVNA7.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Customer Order Header Status;
               ESM=Estado cabecera ped. cliente;
               FRC=êtat en-tàte de la commande client;
               ENC=Customer Order Header Status];
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table36;
    SourceTableView=SORTING(Document Type,Sell-to Customer No.,No.)
                    WHERE(Document Type=FILTER(Order|Return Order));
    PageType=List;
    OnInit=BEGIN
             "On HoldEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 OnCreditManagementForm(TRUE);
                 UpdateTotal;
               END;

    OnAfterGetRecord=BEGIN
                       GetLastShipmentInvoice;
                       OnAfterGetCurrRecord;
                     END;

    OnNewRecord=BEGIN
                  OnAfterGetCurrRecord;
                END;

    OnModifyRecord=BEGIN
                     UpdateTotal;
                   END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 1020004;2;Field     ;
                SourceExpr="Document Type";
                Visible=FALSE;
                Editable=FALSE }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  IF PAGE.RUNMODAL(PAGE::"Sales Order",Rec) = ACTION::LookupOK THEN;
                                "Document Type"::"Return Order":
                                  IF PAGE.RUNMODAL(PAGE::"Sales Return Order",Rec) = ACTION::LookupOK THEN;
                              END;
                            END;
                             }

    { 21  ;2   ;Field     ;
                SourceExpr="Your Reference" }

    { 4   ;2   ;Field     ;
                SourceExpr="Order Date";
                Editable=FALSE }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Last Shipment Date;
                           ESM=Èlt. fecha env°o;
                           FRC=Date de derniäre livraison;
                           ENC=Last Shipment Date];
                SourceExpr=LastShipmentDate;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  BEGIN
                                    GetLastShipment;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Shipments",SalesShipmentHeader) = ACTION::LookupOK THEN;
                                  END;
                                "Document Type"::"Return Order":
                                  BEGIN
                                    GetLastRetReceipt;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Return Receipts",RetReceiptHeader) = ACTION::LookupOK THEN;
                                  END;
                              END;
                            END;
                             }

    { 1020006;2;Field     ;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE;
                Editable=FALSE }

    { 1020008;2;Field     ;
                SourceExpr="Promised Delivery Date";
                Visible=FALSE;
                Editable=FALSE }

    { 6   ;2   ;Field     ;
                CaptionML=[ENU=Next Shipment Date;
                           ESM=Siguiente fecha env°o;
                           FRC=Prochaine date de livraison;
                           ENC=Next Shipment Date];
                SourceExpr="Shipment Date";
                Editable=FALSE }

    { 1020010;2;Field     ;
                SourceExpr="Shipping Time";
                Visible=FALSE;
                Editable=FALSE }

    { 1020002;2;Field     ;
                SourceExpr="Completely Shipped";
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                CaptionML=[ENU=Last Invoice Date;
                           ESM=Ult. fecha factura;
                           FRC=Date de la derniäre facture;
                           ENC=Last Invoice Date];
                SourceExpr=LastInvoiceDate;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              CASE "Document Type" OF
                                "Document Type"::Order:
                                  BEGIN
                                    GetLastInvoice;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Invoices",SalesInvoiceHeader) = ACTION::LookupOK THEN;
                                  END;
                                "Document Type"::"Return Order":
                                  BEGIN
                                    GetLastCrMemo;
                                    IF PAGE.RUNMODAL(PAGE::"Posted Sales Credit Memos",RetCreditMemoHeader) = ACTION::LookupOK THEN;
                                  END;
                              END;
                            END;
                             }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Open Amount;
                           ESM=Imp. abierto;
                           FRC=Montant ouvert;
                           ENC=Open Amount];
                SourceExpr="Outstanding Amount ($)";
                Editable=FALSE }

    { 1020000;2;Field     ;
                SourceExpr=Status;
                Editable=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="On Hold";
                Editable="On HoldEditable" }

    { 20  ;1   ;Group      }

    { 12  ;2   ;Field     ;
                CaptionML=[ENU=Total Open Amount On Hold;
                           ESM=Total imp. abierto en espera;
                           FRC=Montant ouvert total en attente;
                           ENC=Total Open Amount On Hold];
                SourceExpr=TotalOpenAmountOnHold;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                CaptionML=[ENU=Total Open Amount;
                           ESM=Total imp. abierto;
                           FRC=Montant ouvert total;
                           ENC=Total Open Amount];
                SourceExpr=TotalOpenAmount;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9084;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1904036807;1;Part   ;
                SubPageLink=Document Type=FILTER(Order|Return Order),
                            Document No.=FIELD(No.);
                PagePartID=Page36641;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1904036507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page36642;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=TRUE;
                Editable=FALSE;
                PartType=Page }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                Editable=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      SalesHeader@1020000 : Record 36;
      SalesShipmentHeader@1020001 : Record 110;
      SalesInvoiceHeader@1020002 : Record 112;
      RetReceiptHeader@1020009 : Record 6660;
      RetCreditMemoHeader@1020010 : Record 114;
      LastShipmentDate@1020004 : Date;
      LastInvoiceDate@1020005 : Date;
      TotalOpenAmount@1020007 : Decimal;
      TotalOpenAmountOnHold@1020008 : Decimal;
      "On HoldEditable"@19058110 : Boolean INDATASET;

    PROCEDURE OnCreditManagementForm@1(SetOnCreditManagementForm@1020000 : Boolean);
    BEGIN
      // Make certain Fields editable
      "On HoldEditable" := SetOnCreditManagementForm;
    END;

    PROCEDURE UpdateTotal@2();
    BEGIN
      TotalOpenAmount := 0;
      TotalOpenAmountOnHold := 0;
      SalesHeader.COPY(Rec);
      IF SalesHeader.FIND('-') THEN
        REPEAT
          SalesHeader.CALCFIELDS("Outstanding Amount ($)");
          TotalOpenAmount := TotalOpenAmount + SalesHeader."Outstanding Amount ($)";
          IF SalesHeader."On Hold" <> '' THEN
            TotalOpenAmountOnHold := TotalOpenAmountOnHold + SalesHeader."Outstanding Amount ($)";
        UNTIL SalesHeader.NEXT = 0;
    END;

    PROCEDURE GetLastShipmentInvoice@3();
    BEGIN
      // Calculate values for this row
      CASE "Document Type" OF
        "Document Type"::Order:
          BEGIN
            IF GetLastShipment THEN
              LastShipmentDate := SalesShipmentHeader."Shipment Date"
            ELSE
              LastShipmentDate := 0D;
            IF GetLastInvoice THEN
              LastInvoiceDate := SalesInvoiceHeader."Posting Date"
            ELSE
              LastInvoiceDate := 0D;
          END;
        "Document Type"::"Return Order":
          BEGIN
            IF GetLastRetReceipt THEN
              LastShipmentDate := RetReceiptHeader."Posting Date"
            ELSE
              LastShipmentDate := 0D;
            IF GetLastCrMemo THEN
              LastInvoiceDate := RetCreditMemoHeader."Posting Date"
            ELSE
              LastInvoiceDate := 0D;
          END;
        ELSE
          BEGIN
          LastShipmentDate := 0D;
          LastInvoiceDate := 0D;
        END;
      END;
    END;

    PROCEDURE GetLastShipment@4() : Boolean;
    BEGIN
      SalesShipmentHeader.SETCURRENTKEY("Order No."{, "Shipment Date"}); // may want to create this key
      SalesShipmentHeader.SETRANGE("Order No.","No.");
      EXIT(SalesShipmentHeader.FINDLAST);
    END;

    PROCEDURE GetLastInvoice@5() : Boolean;
    BEGIN
      SalesInvoiceHeader.SETCURRENTKEY("Order No."{, "Shipment Date"}); // may want to create this key
      SalesInvoiceHeader.SETRANGE("Order No.","No.");
      EXIT(SalesInvoiceHeader.FINDLAST);
    END;

    PROCEDURE GetLastRetReceipt@6() : Boolean;
    BEGIN
      RetReceiptHeader.SETCURRENTKEY("Return Order No."{, "Shipment Date"}); // may want to create this key
      RetReceiptHeader.SETRANGE("Return Order No.","No.");
      EXIT(RetReceiptHeader.FINDLAST);
    END;

    PROCEDURE GetLastCrMemo@7() : Boolean;
    BEGIN
      RetCreditMemoHeader.SETCURRENTKEY("Return Order No."{, "Shipment Date"}); // may want to create this key
      RetCreditMemoHeader.SETRANGE("Return Order No.","No.");
      EXIT(RetCreditMemoHeader.FINDLAST);
    END;

    LOCAL PROCEDURE OnAfterGetCurrRecord@19077479();
    BEGIN
      xRec := Rec;
      UpdateTotal;
    END;

    BEGIN
    END.
  }
}

