OBJECT Page 99000833 Check Prod. Order Status
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Check Prod. Order Status;
               ESM=Comprobar el estado de la orden de producci¢n;
               FRC=V‚rifier ‚tat bon de prod.;
               ENC=Check Prod. Order Status];
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    DataCaptionExpr='';
    PageType=ConfirmationDialog;
    InstructionalTextML=[ENU=This Sales Line is currently planned. Your changes will not cause any replanning. Do you still want to record the changes?;
                         ESM=Esta l¡nea de ventas est  planificada. Los cambios no provocar n ninguna replanificaci¢n. ¨Aun desea registrar los cambios?;
                         FRC=Cette ligne vente est d‚j… planifi‚e. Vos modifications n'entraŒneront pas de replanification. Souhaitez-vous quand mˆme enregistrer les modifications ?;
                         ENC=This Sales Line is currently planned. Your changes will not cause any replanning. Do you still want to record the changes?];
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=Details;
                           ESM=Detalles;
                           FRC=D‚tails;
                           ENC=Details] }

    { 5   ;2   ;Field     ;
                SourceExpr="No.";
                Editable=FALSE }

    { 7   ;2   ;Field     ;
                SourceExpr=Description;
                Editable=FALSE }

    { 29  ;2   ;Field     ;
                CaptionML=[ENU=Last Status;
                           ESM=élt. estado;
                           FRC=Dernier ‚tat;
                           ENC=Last Status];
                OptionCaptionML=[ENU=Simulated,Planned,Firm Planned,Released;
                                 ESM=Simulada,Planificada,Planificada en firme,Lanzada;
                                 FRC=Simul‚,Planifi‚,Planifi‚ ferme,Lib‚r‚;
                                 ENC=Simulated,Planned,Firm Planned,Released];
                SourceExpr=LastStatus;
                Editable=FALSE }

    { 35  ;2   ;Field     ;
                CaptionML=[ENU=Last Order Type;
                           ESM=élt. tipo orden;
                           FRC=Dernier type commande;
                           ENC=Last Order Type];
                OptionCaptionML=[ENU=Production,Purchase;
                                 ESM=Producci¢n,Compras;
                                 FRC=Production,Achat;
                                 ENC=Production,Purchase];
                SourceExpr=LastOrderType;
                Editable=FALSE }

    { 32  ;2   ;Field     ;
                CaptionML=[ENU=Last Order No.;
                           ESM=élt. n§ orden;
                           FRC=Dernier n§ commande;
                           ENC=Last Order No.];
                SourceExpr=LastOrderNo;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MfgSetup@1000 : Record 99000765;
      LastStatus@1001 : 'Simulated,Planned,Firm Planned,Released';
      LastOrderType@1002 : 'Production,Purchase';
      LastOrderNo@1003 : Code[20];

    PROCEDURE SalesLineShowWarning@2(SalesLine@1000 : Record 37) : Boolean;
    VAR
      SalesLine2@1001 : Record 37;
      ReservEntry@1002 : Record 337;
      ReservEntry2@1007 : Record 337;
      ProdOrderLine@1003 : Record 5406;
      ReserveSalesLine@1004 : Codeunit 99000832;
      ReservEngineMgt@1005 : Codeunit 99000831;
    BEGIN
      IF SalesLine."Drop Shipment" THEN
        EXIT(FALSE);

      MfgSetup.GET;
      IF NOT MfgSetup."Planning Warning" THEN
        EXIT(FALSE);

      IF NOT SalesLine2.GET(
           SalesLine."Document Type",
           SalesLine."Document No.",
           SalesLine."Line No.")
      THEN
        EXIT;

      IF (SalesLine2.Type <> SalesLine2.Type::Item) OR
         (SalesLine2."No." = '') OR
         (SalesLine2."Outstanding Quantity" <= 0)
      THEN
        EXIT;

      ReservEntry."Source Type" := DATABASE::"Sales Line";
      ReservEntry."Source Subtype" := SalesLine2."Document Type";
      ReservEntry."Item No." := SalesLine2."No.";
      ReservEntry."Variant Code" := SalesLine2."Variant Code";
      ReservEntry."Location Code" := SalesLine2."Location Code";
      ReservEntry."Expected Receipt Date" := SalesLine2."Shipment Date";

      ReservEngineMgt.InitFilterAndSortingFor(ReservEntry,TRUE);
      ReserveSalesLine.FilterReservFor(ReservEntry,SalesLine2);

      IF ReservEntry.FINDSET THEN
        REPEAT
          IF ReservEntry2.GET(ReservEntry."Entry No.",NOT ReservEntry.Positive) THEN
            CASE ReservEntry2."Source Type" OF
              DATABASE::"Prod. Order Line":
                IF ReservEntry2."Source Subtype" <> 1 THEN BEGIN
                  ProdOrderLine.GET(
                    ReservEntry2."Source Subtype",ReservEntry2."Source ID",ReservEntry2."Source Prod. Order Line");
                  LastStatus := ProdOrderLine.Status;
                  LastOrderNo := ProdOrderLine."Prod. Order No.";
                  LastOrderType := LastOrderType::Production;
                  EXIT(TRUE);
                END;
            END;
        UNTIL ReservEntry.NEXT = 0;

      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

