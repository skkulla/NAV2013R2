OBJECT Codeunit 1314 PurchInvFromSalesInvoice
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      CreatePurchInvOptionQst@1001 : TextConst 'ENU=All Lines,Selected Lines;ESM=Todas l¡neas,L¡neas seleccionadas;FRC=Toutes les lignes,Lignes s‚lectionn‚es;ENC=All Lines,Selected Lines';
      CreatePurchInvInstructionTxt@1000 : TextConst 'ENU=A purchase invoice will be created. Select which sales invoice lines to use.;ESM=Se crear  una factura de compra. Seleccione las l¡neas de factura de venta que se deben utilizar.;FRC=Une facture achat va ˆtre cr‚‚e. S‚lectionnez les lignes facture vente pour celle-ci.;ENC=A purchase invoice will be created. Select which sales invoice lines to use.';
      SelectVentorTxt@1002 : TextConst 'ENU=Select a vendor to buy from.;ESM=Seleccione un proveedor al que comprar.;FRC=S‚lectionnez un fournisseur chez qui effectuer vos achats.;ENC=Select a vendor to buy from.';
      TypeNotSupportedErr@1003 : TextConst '@@@=Line or Document type;ENU=Type %1 is not supported.;ESM=El tipo %1 no es compatible.;FRC=Le type %1 n''est pas pris en charge.;ENC=Type %1 is not supported.';

    PROCEDURE CreatePurchaseInvoice@2(SalesHeader@1000 : Record 36;VAR SelectedSalesLine@1001 : Record 37);
    VAR
      Vendor@1008 : Record 23;
      PurchaseHeader@1007 : Record 38;
      SalesLine@1005 : Record 37;
      MiniVendorList@1004 : Page 1331;
      OptionNumber@1002 : Integer;
    BEGIN
      OptionNumber := DIALOG.STRMENU(CreatePurchInvOptionQst,1,CreatePurchInvInstructionTxt);

      IF OptionNumber = 0 THEN
        EXIT;

      MiniVendorList.LOOKUPMODE(TRUE);
      MiniVendorList.CAPTION(SelectVentorTxt);
      IF MiniVendorList.RUNMODAL = ACTION::LookupOK THEN BEGIN
        Vendor.INIT;
        MiniVendorList.GETRECORD(Vendor);

        CreatePurchaseHeader(PurchaseHeader,SalesHeader,Vendor);

        CASE OptionNumber OF
          1:
            BEGIN
              SalesLine.SETRANGE("Document Type",SalesHeader."Document Type");
              SalesLine.SETRANGE("Document No.",SalesHeader."No.");
              CopySalesLinesToPurchaseLines(PurchaseHeader,SalesLine);
            END;
          2:
            CopySalesLinesToPurchaseLines(PurchaseHeader,SelectedSalesLine);
        END;

        PAGE.RUN(PAGE::"Mini Purchase Invoice",PurchaseHeader);
      END;
    END;

    LOCAL PROCEDURE CreatePurchaseHeader@5(VAR PurchaseHeader@1002 : Record 38;SalesHeader@1000 : Record 36;Vendor@1001 : Record 23);
    BEGIN
      PurchaseHeader.INIT;

      CASE SalesHeader."Document Type" OF
        SalesHeader."Document Type"::Invoice:
          PurchaseHeader.VALIDATE("Document Type",PurchaseHeader."Document Type"::Invoice);
        ELSE
          ERROR(TypeNotSupportedErr,FORMAT(SalesHeader."Document Type"));
      END;

      PurchaseHeader.InitRecord;
      PurchaseHeader.VALIDATE("Buy-from Vendor No.",Vendor."No.");
      PurchaseHeader.INSERT(TRUE);
    END;

    LOCAL PROCEDURE CopySalesLinesToPurchaseLines@7(PurchaseHeader@1001 : Record 38;VAR SalesLine@1002 : Record 37);
    VAR
      PurchaseLine@1000 : Record 39;
      PurchaseLineNo@1003 : Integer;
    BEGIN
      PurchaseLineNo := 0;
      IF SalesLine.FIND('-') THEN
        REPEAT
          CLEAR(PurchaseLine);
          PurchaseLine.INIT;
          PurchaseLine."Document No." := PurchaseHeader."No.";
          PurchaseLine."Document Type" := PurchaseHeader."Document Type";

          PurchaseLineNo := PurchaseLineNo + 10000;
          PurchaseLine."Line No." := PurchaseLineNo;

          CASE SalesLine.Type OF
            SalesLine.Type::" ":
              PurchaseLine.Type := PurchaseLine.Type::" ";
            SalesLine.Type::Item:
              PurchaseLine.Type := PurchaseLine.Type::Item;
            ELSE
              ERROR(TypeNotSupportedErr,FORMAT(SalesLine.Type));
          END;

          PurchaseLine.VALIDATE("No.",SalesLine."No.");
          PurchaseLine.Description := SalesLine.Description;

          IF PurchaseLine."No." <> '' THEN BEGIN
            PurchaseLine.VALIDATE("Buy-from Vendor No.",PurchaseHeader."Buy-from Vendor No.");
            PurchaseLine.VALIDATE("Pay-to Vendor No.",PurchaseHeader."Pay-to Vendor No.");
            PurchaseLine.VALIDATE(Quantity,SalesLine.Quantity);
            PurchaseLine.VALIDATE("Unit of Measure Code",SalesLine."Unit of Measure Code");
          END;

          PurchaseLine.INSERT(TRUE);
        UNTIL SalesLine.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

