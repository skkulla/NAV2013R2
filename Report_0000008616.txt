OBJECT Report 8616 Get Package Tables
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Get Package Tables;
               ESM=Obtener tablas de paquete;
               FRC=Extraire tables package;
               ENC=Get Package Tables];
    ProcessingOnly=Yes;
    OnPreReport=VAR
                  ConfigLine@1000 : Record 8622;
                BEGIN
                  IF PackageCode = '' THEN
                    ERROR(Text001);

                  TempConfigSelection.RESET;
                  TempConfigSelection.SETRANGE("Line Type",TempConfigSelection."Line Type"::Table);
                  TempConfigSelection.SETRANGE(Selected,TRUE);
                  IF TempConfigSelection.FINDSET THEN
                    REPEAT
                      IF DataExists(TempConfigSelection."Table ID") AND NOT ConfigPackageTable.GET(PackageCode,TempConfigSelection."Table ID") THEN BEGIN
                        ConfigPackageTable.INIT;
                        ConfigPackageTable.VALIDATE("Package Code",PackageCode);
                        ConfigPackageTable.VALIDATE("Table ID",TempConfigSelection."Table ID");
                        ConfigPackageTable.INSERT(TRUE);
                        ConfigLine.GET(TempConfigSelection."Line No.");
                        IF ConfigLine."Package Code" = '' THEN BEGIN
                          ConfigLine."Package Code" := PackageCode;
                          ConfigLine.MODIFY;
                        END;
                      END;
                    UNTIL TempConfigSelection.NEXT = 0;

                  CurrReport.BREAK;
                END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      OnInit=BEGIN
               InitSelection;
             END;

    }
    CONTROLS
    {
      { 8   ;0   ;Container ;
                  ContainerType=ContentArea }

      { 7   ;1   ;Group     ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 2   ;2   ;Field     ;
                  Name=SelectTables;
                  CaptionML=[ENU=Select Tables;
                             ESM=Seleccionar tablas;
                             FRC=S‚lectionner tables;
                             ENC=Select Tables];
                  SourceExpr=SelectedTables;
                  Editable=FALSE;
                  OnAssistEdit=VAR
                                 ConfigSelection@1000 : Page 8628;
                               BEGIN
                                 ConfigSelection.Set(TempConfigSelection);
                                 COMMIT;
                                 IF ConfigSelection.RUNMODAL = ACTION::OK THEN
                                   SelectedTables := ConfigSelection.Get(TempConfigSelection);
                               END;
                                }

      { 6   ;2   ;Field     ;
                  Name=WithDataOnly;
                  CaptionML=[ENU=With Data Only;
                             ESM=Solo con datos;
                             FRC=Avec donn‚es uniquement;
                             ENC=With Data Only];
                  OptionCaptionML=[ENU=Purchase,Sale,Positive Adjmt.,Negative Adjmt.;
                                   ESM=Compra,Venta,Ajuste positivo,Ajuste negativo;
                                   FRC=Achat,Vente,Ajust. positif,Ajust. n‚gatif;
                                   ENC=Purchase,Sale,Positive Adjmt.,Negative Adjmt.];
                  SourceExpr=WithDataOnly }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ConfigPackageTable@1007 : Record 8613;
      TempConfigSelection@1003 : TEMPORARY Record 8621;
      TableInfo@1006 : Record 2000000028;
      SelectedTables@1008 : Integer;
      PackageCode@1001 : Code[20];
      WithDataOnly@1005 : Boolean;
      Text001@1009 : TextConst 'ENU=Package is not set.;ESM=Paquete no definido.;FRC=Package non d‚fini.;ENC=Package is not set.';

    PROCEDURE Set@2(NewPackageCode@1001 : Code[20]);
    BEGIN
      PackageCode := NewPackageCode;
    END;

    LOCAL PROCEDURE DataExists@4(TableID@1000 : Integer) : Boolean;
    BEGIN
      IF NOT WithDataOnly THEN
        EXIT(TRUE);

      TableInfo.SETRANGE("Company Name",COMPANYNAME);
      TableInfo.SETRANGE("Table No.",TableID);
      IF TableInfo.FINDFIRST THEN
        IF TableInfo."No. of Records" > 0 THEN
          EXIT(TRUE);

      EXIT(FALSE);
    END;

    LOCAL PROCEDURE InitSelection@1();
    VAR
      ConfigLine@1000 : Record 8622;
    BEGIN
      WITH TempConfigSelection DO BEGIN
        RESET;
        ConfigLine.SETFILTER("Table ID",'<>0');
        IF ConfigLine.FINDSET THEN
          REPEAT
            IF (ConfigLine."Line Type" <> ConfigLine."Line Type"::Table) OR
               ((ConfigLine."Line Type" = ConfigLine."Line Type"::Table) AND (ConfigLine."Package Code" = ''))
            THEN
              IF NOT GET(ConfigLine."Line No.") THEN BEGIN
                INIT;
                "Line No." := ConfigLine."Line No.";
                "Table ID" := ConfigLine."Table ID";
                Name := ConfigLine.Name;
                "Line Type" := ConfigLine."Line Type";
                INSERT;
              END;
          UNTIL ConfigLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

