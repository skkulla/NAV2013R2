OBJECT Table 274 Bank Acc. Reconciliation Line
{
  OBJECT-PROPERTIES
  {
    Date=12/02/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10.00.35800;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               BankAccRecon.GET("Bank Account No.","Statement No.");
               "Applied Entries" := 0;
               VALIDATE("Applied Amount",0);
             END;

    OnModify=BEGIN
               IF xRec."Statement Amount" <> "Statement Amount" THEN
                 RemoveApplication(Type);
             END;

    OnDelete=BEGIN
               RemoveApplication(Type);
               ClearPostExchEntries;
             END;

    OnRename=BEGIN
               ERROR(Text000,TABLECAPTION);
             END;

    CaptionML=[ENU=Bank Acc. Reconciliation Line;
               ESM=L°n. conciliaci¢n banco;
               FRC=Ligne rapproch. cpte bancaire;
               ENC=Bank Acc. Reconciliation Line];
    PasteIsValid=No;
  }
  FIELDS
  {
    { 1   ;   ;Bank Account No.    ;Code20        ;TableRelation="Bank Account";
                                                   CaptionML=[ENU=Bank Account No.;
                                                              ESM=C¢d. cuenta banco;
                                                              FRC=N¯ compte bancaire;
                                                              ENC=Bank Account No.] }
    { 2   ;   ;Statement No.       ;Code20        ;TableRelation="Bank Acc. Reconciliation"."Statement No." WHERE (Bank Account No.=FIELD(Bank Account No.));
                                                   CaptionML=[ENU=Statement No.;
                                                              ESM=Nß estado de cta. banco;
                                                              FRC=N¯ de relevÇ;
                                                              ENC=Statement No.] }
    { 3   ;   ;Statement Line No.  ;Integer       ;CaptionML=[ENU=Statement Line No.;
                                                              ESM=Nß l°n. estado de cta. banco;
                                                              FRC=N¯ ligne relevÇ;
                                                              ENC=Statement Line No.] }
    { 4   ;   ;Document No.        ;Code20        ;CaptionML=[ENU=Document No.;
                                                              ESM=Nß documento;
                                                              FRC=N¯ de document;
                                                              ENC=Document No.] }
    { 5   ;   ;Transaction Date    ;Date          ;CaptionML=[ENU=Transaction Date;
                                                              ESM=Fecha movimiento;
                                                              FRC=Date transaction;
                                                              ENC=Transaction Date] }
    { 6   ;   ;Description         ;Text50        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 7   ;   ;Statement Amount    ;Decimal       ;OnValidate=BEGIN
                                                                Difference := "Statement Amount" - "Applied Amount";
                                                              END;

                                                   CaptionML=[ENU=Statement Amount;
                                                              ESM=Importe estado de cuenta;
                                                              FRC=Montant relevÇ;
                                                              ENC=Statement Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 8   ;   ;Difference          ;Decimal       ;OnValidate=BEGIN
                                                                "Statement Amount" := "Applied Amount" + Difference;
                                                              END;

                                                   CaptionML=[ENU=Difference;
                                                              ESM=Diferencia;
                                                              FRC=DiffÇrence;
                                                              ENC=Difference];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 9   ;   ;Applied Amount      ;Decimal       ;OnValidate=BEGIN
                                                                Difference := "Statement Amount" - "Applied Amount";
                                                              END;

                                                   OnLookup=BEGIN
                                                              DisplayApplication;
                                                            END;

                                                   CaptionML=[ENU=Applied Amount;
                                                              ESM=Importe conciliado;
                                                              FRC=Montant affectÇ;
                                                              ENC=Applied Amount];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=GetCurrencyCode }
    { 10  ;   ;Type                ;Option        ;OnValidate=BEGIN
                                                                IF (Type <> xRec.Type) AND
                                                                   ("Applied Entries" <> 0)
                                                                THEN
                                                                  IF CONFIRM(Text001,FALSE) THEN BEGIN
                                                                    RemoveApplication(xRec.Type);
                                                                    VALIDATE("Applied Amount",0);
                                                                    "Applied Entries" := 0;
                                                                    "Check No." := '';
                                                                  END ELSE
                                                                    ERROR(Text002);
                                                              END;

                                                   CaptionML=[ENU=Type;
                                                              ESM=Tipo;
                                                              FRC=Type;
                                                              ENC=Type];
                                                   OptionCaptionML=[ENU=Bank Account Ledger Entry,Check Ledger Entry,Difference;
                                                                    ESM=Mov. banco,Mov. cheque,Diferencia;
                                                                    FRC=êcriture compte bancaire,êcriture compte Chäque,DiffÇrence;
                                                                    ENC=Bank Account Ledger Entry,Cheque Ledger Entry,Difference];
                                                   OptionString=Bank Account Ledger Entry,Check Ledger Entry,Difference }
    { 11  ;   ;Applied Entries     ;Integer       ;OnLookup=BEGIN
                                                              DisplayApplication;
                                                            END;

                                                   CaptionML=[ENU=Applied Entries;
                                                              ESM=Movs. conciliados;
                                                              FRC=êcritures affectÇes;
                                                              ENC=Applied Entries];
                                                   Editable=No }
    { 12  ;   ;Value Date          ;Date          ;CaptionML=[ENU=Value Date;
                                                              ESM=Fecha valor;
                                                              FRC=Date de valeur;
                                                              ENC=Value Date] }
    { 13  ;   ;Ready for Application;Boolean      ;CaptionML=[ENU=Ready for Application;
                                                              ESM=Listo para conciliar;
                                                              FRC=Pràt Ö utiliser;
                                                              ENC=Ready for Application] }
    { 14  ;   ;Check No.           ;Code20        ;CaptionML=[ENU=Check No.;
                                                              ESM=Nß cheque;
                                                              FRC=N¯ de chäque;
                                                              ENC=Cheque No.] }
    { 15  ;   ;Payer Information   ;Text50        ;CaptionML=[ENU=Payer Information;
                                                              ESM=Informaci¢n del pagador;
                                                              FRC=Informations payeur;
                                                              ENC=Payer Information] }
    { 16  ;   ;Transaction Information;Text100    ;CaptionML=[ENU=Transaction Information;
                                                              ESM=Informaci¢n de la transacci¢n;
                                                              FRC=Informations transaction;
                                                              ENC=Transaction Information] }
    { 17  ;   ;Posting Exch. Entry No.;Integer    ;TableRelation="Posting Exch.";
                                                   CaptionML=[ENU=Posting Exch. Entry No.;
                                                              ESM=N.ß entrada intercambio registro;
                                                              FRC=N¯ Çcriture Çchge report;
                                                              ENC=Posting Exch. Entry No.];
                                                   Editable=No }
    { 18  ;   ;Posting Exch. Line No.;Integer     ;CaptionML=[ENU=Posting Exch. Line No.;
                                                              ESM=N.ß l°nea intercambio registro;
                                                              FRC=N¯ ligne Çchge report;
                                                              ENC=Posting Exch. Line No.];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Bank Account No.,Statement No.,Statement Line No.;
                                                   SumIndexFields=Statement Amount,Difference;
                                                   MaintainSIFTIndex=No;
                                                   Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot rename a %1.;ESM=No se puede cambiar el nombre a %1.;FRC=Vous ne pouvez pas renommer un %1.;ENC=You cannot rename a %1.';
      Text001@1001 : TextConst 'ENU=Delete application?;ESM=®Confirma que desea eliminar la conciliaci¢n?;FRC=Supprimer utilisation?;ENC=Delete application?';
      Text002@1002 : TextConst 'ENU=Update canceled.;ESM=Actualizaci¢n cancelada.;FRC=Mise-Ö-jour annulÇe.;ENC=Update cancelled.';
      BankAccLedgEntry@1003 : Record 271;
      CheckLedgEntry@1004 : Record 272;
      BankAccRecon@1005 : Record 273;
      BankAccSetStmtNo@1006 : Codeunit 375;
      CheckSetStmtNo@1007 : Codeunit 376;

    LOCAL PROCEDURE RemoveApplication@1(AppliedType@1000 : Option);
    BEGIN
      CASE AppliedType OF
        Type::"Bank Account Ledger Entry":
          BEGIN
            BankAccLedgEntry.RESET;
            BankAccLedgEntry.SETCURRENTKEY("Bank Account No.",Open);
            BankAccLedgEntry.SETRANGE("Bank Account No.","Bank Account No.");
            BankAccLedgEntry.SETRANGE(Open,TRUE);
            BankAccLedgEntry.SETRANGE(
              "Statement Status",BankAccLedgEntry."Statement Status"::"Bank Acc. Entry Applied");
            BankAccLedgEntry.SETRANGE("Statement No.","Statement No.");
            BankAccLedgEntry.SETRANGE("Statement Line No.","Statement Line No.");
            BankAccLedgEntry.LOCKTABLE;
            CheckLedgEntry.LOCKTABLE;
            IF BankAccLedgEntry.FIND('-') THEN
              REPEAT
                BankAccSetStmtNo.RemoveReconNo(BankAccLedgEntry,Rec,TRUE);
              UNTIL BankAccLedgEntry.NEXT = 0;
            "Applied Entries" := 0;
            VALIDATE("Applied Amount",0);
            MODIFY;
          END;
        Type::"Check Ledger Entry":
          BEGIN
            CheckLedgEntry.RESET;
            CheckLedgEntry.SETCURRENTKEY("Bank Account No.",Open);
            CheckLedgEntry.SETRANGE("Bank Account No.","Bank Account No.");
            CheckLedgEntry.SETRANGE(Open,TRUE);
            CheckLedgEntry.SETRANGE(
              "Statement Status",CheckLedgEntry."Statement Status"::"Check Entry Applied");
            CheckLedgEntry.SETRANGE("Statement No.","Statement No.");
            CheckLedgEntry.SETRANGE("Statement Line No.","Statement Line No.");
            BankAccLedgEntry.LOCKTABLE;
            CheckLedgEntry.LOCKTABLE;
            IF CheckLedgEntry.FIND('-') THEN
              REPEAT
                CheckSetStmtNo.RemoveReconNo(CheckLedgEntry,Rec,TRUE);
              UNTIL CheckLedgEntry.NEXT = 0;
            "Applied Entries" := 0;
            VALIDATE("Applied Amount",0);
            "Check No." := '';
            MODIFY;
          END;
      END;
    END;

    LOCAL PROCEDURE DisplayApplication@2();
    BEGIN
      CASE Type OF
        Type::"Bank Account Ledger Entry":
          BEGIN
            BankAccLedgEntry.RESET;
            BankAccLedgEntry.SETCURRENTKEY("Bank Account No.",Open);
            BankAccLedgEntry.SETRANGE("Bank Account No.","Bank Account No.");
            BankAccLedgEntry.SETRANGE(Open,TRUE);
            BankAccLedgEntry.SETRANGE(
              "Statement Status",BankAccLedgEntry."Statement Status"::"Bank Acc. Entry Applied");
            BankAccLedgEntry.SETRANGE("Statement No.","Statement No.");
            BankAccLedgEntry.SETRANGE("Statement Line No.","Statement Line No.");
            PAGE.RUN(0,BankAccLedgEntry);
          END;
        Type::"Check Ledger Entry":
          BEGIN
            CheckLedgEntry.RESET;
            CheckLedgEntry.SETCURRENTKEY("Bank Account No.",Open);
            CheckLedgEntry.SETRANGE("Bank Account No.","Bank Account No.");
            CheckLedgEntry.SETRANGE(Open,TRUE);
            CheckLedgEntry.SETRANGE(
              "Statement Status",CheckLedgEntry."Statement Status"::"Check Entry Applied");
            CheckLedgEntry.SETRANGE("Statement No.","Statement No.");
            CheckLedgEntry.SETRANGE("Statement Line No.","Statement Line No.");
            PAGE.RUN(0,CheckLedgEntry);
          END;
      END;
    END;

    PROCEDURE GetCurrencyCode@3() : Code[10];
    VAR
      BankAcc@1000 : Record 270;
    BEGIN
      IF "Bank Account No." = BankAcc."No." THEN
        EXIT(BankAcc."Currency Code");

      IF BankAcc.GET("Bank Account No.") THEN
        EXIT(BankAcc."Currency Code");

      EXIT('');
    END;

    PROCEDURE GetNextLineNo@4(BankAccNo@1000 : Code[20];StatementNo@1001 : Code[20]) LocalLineNo : Integer;
    BEGIN
      SETRANGE("Bank Account No.",BankAccNo);
      SETRANGE("Statement No.",StatementNo);
      IF FINDLAST THEN
        LocalLineNo := "Statement Line No.";
      LocalLineNo += 10000;
    END;

    PROCEDURE GetStyle@35() : Text;
    BEGIN
      IF "Applied Entries" <> 0 THEN
        EXIT('Favorable');

      EXIT('');
    END;

    LOCAL PROCEDURE ClearPostExchEntries@5();
    VAR
      PostExchField@1000 : Record 1221;
    BEGIN
      PostExchField.SETRANGE("Posting Exch. No.","Posting Exch. Entry No.");
      PostExchField.SETRANGE("Line No.","Posting Exch. Line No.");
      PostExchField.DELETEALL;
    END;

    BEGIN
    END.
  }
}

