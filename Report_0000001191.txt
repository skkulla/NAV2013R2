OBJECT Report 1191 Suggest Res. Price Chg. (Res.)
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Suggest Res. Price Chg. (Res.);
               ESM=Prop. mod. recurso (recurso);
               FRC=Modification de prix de ressource propos‚e (ress.);
               ENC=Suggest Res. Price Chg. (Res.)];
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  RoundingMethod.SETRANGE(Code,RoundingMethod.Code);

                  IF ToCurrency.Code = '' THEN BEGIN
                    ToCurrency.InitRoundingPrecision;
                  END ELSE BEGIN
                    ToCurrency.FIND;
                    ToCurrency.TESTFIELD("Unit-Amount Rounding Precision");
                  END;

                  WITH ResPriceChg DO BEGIN
                    "Currency Code" := ToCurrency.Code;
                    "Work Type Code" := ToWorkType.Code;
                  END;
                END;

  }
  DATASET
  {
    { 5508;    ;DataItem;                    ;
               DataItemTable=Table156;
               DataItemTableView=SORTING(No.);
               OnPreDataItem=BEGIN
                               Window.OPEN(Text000)
                             END;

               OnAfterGetRecord=BEGIN
                                  Window.UPDATE(1,"No.");
                                  WITH ResPriceChg DO BEGIN
                                    Type := Type::Resource;
                                    Code := Resource."No.";
                                    "New Unit Price" :=
                                      ROUND(
                                        CurrExchRate.ExchangeAmtLCYToFCY(
                                          WORKDATE,ToCurrency.Code,
                                          Resource."Unit Price",
                                          CurrExchRate.ExchangeRate(
                                            WORKDATE,ToCurrency.Code)),
                                        ToCurrency."Unit-Amount Rounding Precision");

                                    IF "New Unit Price" > PriceLowerLimit THEN
                                      "New Unit Price" := "New Unit Price" * UnitPriceFactor;
                                    IF RoundingMethod.Code <> '' THEN BEGIN
                                      RoundingMethod."Minimum Amount" := "New Unit Price";
                                      IF RoundingMethod.FIND('=<') THEN BEGIN
                                        "New Unit Price" := "New Unit Price" + RoundingMethod."Amount Added Before";

                                        IF RoundingMethod.Precision > 0 THEN
                                          "New Unit Price" :=
                                            ROUND(
                                              "New Unit Price",
                                              RoundingMethod.Precision,COPYSTR('=><',RoundingMethod.Type + 1,1));
                                        "New Unit Price" := "New Unit Price" + RoundingMethod."Amount Added After";
                                      END;
                                    END;

                                    ResPrice.SETRANGE(Type,Type);
                                    ResPrice.SETRANGE(Code,Code);
                                    ResPrice.SETRANGE("Currency Code",ToCurrency.Code);
                                    ResPrice.SETRANGE("Work Type Code",ToWorkType.Code);
                                    IF ResPrice.FINDLAST THEN BEGIN
                                      "Current Unit Price" := ResPrice."Unit Price";
                                      PriceAlreadyExists := TRUE
                                    END ELSE BEGIN
                                      "Current Unit Price" := 0;
                                      PriceAlreadyExists := FALSE;
                                    END;

                                    IF PriceAlreadyExists OR CreateNewPrices THEN BEGIN
                                      ResPriceChg2 := ResPriceChg;
                                      IF ResPriceChg2.FIND('=') THEN
                                        MODIFY
                                      ELSE
                                        INSERT;
                                    END;
                                  END;
                                END;

               ReqFilterFields=No.,Resource Group No. }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   IF UnitPriceFactor = 0 THEN
                     UnitPriceFactor := 1;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[ENU=Options;
                             ESM=Opciones;
                             FRC=Options;
                             ENC=Options] }

      { 15  ;2   ;Group     ;
                  CaptionML=[ENU=Copy to Res. Price Change...;
                             ESM=Copia a modif. precio recurso...;
                             FRC=Copier au changement de prix ress....;
                             ENC=Copy to Res. Price Change...] }

      { 7   ;3   ;Field     ;
                  CaptionML=[ENU=Currency Code;
                             ESM=C¢d. divisa;
                             FRC=Code devise;
                             ENC=Currency Code];
                  SourceExpr=ToCurrency.Code;
                  TableRelation=Currency }

      { 4   ;3   ;Field     ;
                  CaptionML=[ENU=Work Type;
                             ESM=Tipo trabajo;
                             FRC=Type travail;
                             ENC=Work Type];
                  SourceExpr=ToWorkType.Code;
                  TableRelation="Work Type" }

      { 16  ;2   ;Field     ;
                  CaptionML=[ENU=Only Amounts Above;
                             ESM=S¢lo importes superiores a;
                             FRC=Les montants ci-dessus uniquement;
                             ENC=Only Amounts Above];
                  DecimalPlaces=2:5;
                  SourceExpr=PriceLowerLimit }

      { 13  ;2   ;Field     ;
                  CaptionML=[ENU=Adjustment Factor;
                             ESM=Factor ajuste;
                             FRC=Facteur d'ajustement;
                             ENC=Adjustment Factor];
                  DecimalPlaces=0:5;
                  SourceExpr=UnitPriceFactor;
                  MinValue=0 }

      { 9   ;2   ;Field     ;
                  CaptionML=[ENU=Rounding Method;
                             ESM=M‚todo redondeo;
                             FRC=M‚thode d'arrondissement;
                             ENC=Rounding Method];
                  SourceExpr=RoundingMethod.Code;
                  TableRelation="Rounding Method" }

      { 1   ;2   ;Field     ;
                  CaptionML=[ENU=Create New Prices;
                             ESM=Crear tarifa nueva;
                             FRC=Cr‚er de nouveaux prix;
                             ENC=Create New Prices];
                  SourceExpr=CreateNewPrices }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=Processing items  #1##########;ESM=Procesando prods. #1##########;FRC=Traitement des articles    #1##########;ENC=Processing items  #1##########';
      RoundingMethod@1001 : Record 42;
      ToCurrency@1002 : Record 4;
      CurrExchRate@1003 : Record 330;
      ToWorkType@1010 : Record 200;
      ResPriceChg2@1009 : Record 335;
      ResPriceChg@1008 : Record 335;
      ResPrice@1013 : Record 201;
      Window@1012 : Dialog;
      PriceAlreadyExists@1004 : Boolean;
      CreateNewPrices@1005 : Boolean;
      UnitPriceFactor@1006 : Decimal;
      PriceLowerLimit@1007 : Decimal;

    PROCEDURE InitializeCopyToResPrice@2(CurrencyCode@1000 : Code[10];WorkTypeCode@1002 : Code[10]);
    BEGIN
      ToCurrency.Code := CurrencyCode;
      ToWorkType.Code := WorkTypeCode;
    END;

    PROCEDURE InitializeRequest@1(PriceLowerLimitFrom@1003 : Decimal;UnitPriceFactorFrom@1004 : Decimal;RoundingMethodCode@1005 : Code[10];CreateNewPricesFrom@1006 : Boolean);
    BEGIN
      PriceLowerLimit := PriceLowerLimitFrom;
      UnitPriceFactor := UnitPriceFactorFrom;
      RoundingMethod.Code := RoundingMethodCode;
      CreateNewPrices := CreateNewPricesFrom;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

