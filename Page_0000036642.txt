OBJECT Page 36642 Customer Credit FactBox
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVNA7.00;
  }
  PROPERTIES
  {
    Editable=No;
    CaptionML=[ENU=Credit Information;
               ESM=Informaci¢n de crÇdito;
               FRC=Informations sur le crÇdit;
               ENC=Credit Information];
    SaveValues=Yes;
    SourceTable=Table18;
    PageType=CardPart;
    OnOpenPage=BEGIN
                 // Default the Aging Period to 30D
                 EVALUATE(AgingPeriod,'<30D>');
                 // Initialize Record Variables
                 LatestCustLedgerEntry.RESET;
                 LatestCustLedgerEntry.SETCURRENTKEY("Document Type","Customer No.","Posting Date");
                 LatestCustLedgerEntry.SETRANGE("Document Type",LatestCustLedgerEntry."Document Type"::Payment);
                 FOR I := 1 TO ARRAYLEN(CustLedgerEntry) DO BEGIN
                   CustLedgerEntry[I].RESET;
                   CustLedgerEntry[I].SETCURRENTKEY("Customer No.",Open,Positive,"Due Date");
                   CustLedgerEntry[I].SETRANGE(Open,TRUE);
                 END;
               END;

    OnAfterGetRecord=BEGIN
                       ChangeCustomer;
                       GetLatestPayment;
                       CalculateAging;
                     END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 6   ;1   ;Field     ;
                SourceExpr=Contact }

    { 8   ;1   ;Field     ;
                SourceExpr="Phone No." }

    { 26  ;1   ;Field     ;
                SourceExpr="Collection Method" }

    { 1020000;1;Field     ;
                SourceExpr=Blocked }

    { 14  ;1   ;Field     ;
                SourceExpr="Payment Terms Code" }

    { 28  ;1   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 18  ;1   ;Field     ;
                CaptionML=[ENU=Latest Payment Date;
                           ESM=Èltima fecha pago;
                           FRC=Date du plus rÇcent paiement;
                           ENC=Latest Payment Date];
                SourceExpr=LatestCustLedgerEntry."Posting Date";
                OnDrillDown=BEGIN
                              DrillDown(0);
                            END;
                             }

    { 21  ;1   ;Field     ;
                CaptionML=[ENU=Latest Payment Amount;
                           ESM=Èltimo importe pagos;
                           FRC=Montant du plus rÇcent paiement;
                           ENC=Latest Payment Amount];
                SourceExpr=-LatestCustLedgerEntry."Amount (LCY)";
                OnDrillDown=BEGIN
                              DrillDown(0);
                            END;
                             }

    { 41  ;1   ;Field     ;
                SourceExpr="Credit Limit (LCY)" }

    { 42  ;1   ;Field     ;
                SourceExpr="Balance (LCY)" }

    { 47  ;1   ;Field     ;
                CaptionML=[ENU=Difference;
                           ESM=Diferencia;
                           FRC=DiffÇrence;
                           ENC=Difference];
                SourceExpr="Credit Limit (LCY)" - "Balance (LCY)" }

    { 39  ;1   ;Group     ;
                CaptionML=[ENU=Aging (showing days overdue);
                           ESM=AntigÅedad (d°as de retraso);
                           FRC=Chronologie (affichage des jours en souffrance);
                           ENC=Aging (showing days overdue)] }

    { 53  ;2   ;Field     ;
                CaptionML=[ENU=Not Yet Due;
                           ESM=Sin retraso;
                           FRC=Pas encore dñ;
                           ENC=Not Yet Due];
                SourceExpr=CustLedgerEntry[1]."Remaining Amt. (LCY)";
                CaptionClass=FORMAT(AgingTitle[1]);
                OnDrillDown=BEGIN
                              DrillDown(1);
                            END;
                             }

    { 51  ;2   ;Field     ;
                CaptionML=[ENU=1-30 Days;
                           ESM=1-30 d°as;
                           FRC=1-30 jours;
                           ENC=1-30 Days];
                SourceExpr=CustLedgerEntry[2]."Remaining Amt. (LCY)";
                CaptionClass=FORMAT(AgingTitle[2]);
                OnDrillDown=BEGIN
                              DrillDown(2);
                            END;
                             }

    { 50  ;2   ;Field     ;
                CaptionML=[ENU=31-60 Days;
                           ESM=31-60 d°as;
                           FRC=31-60 jours;
                           ENC=31-60 Days];
                SourceExpr=CustLedgerEntry[3]."Remaining Amt. (LCY)";
                CaptionClass=FORMAT(AgingTitle[3]);
                OnDrillDown=BEGIN
                              DrillDown(3);
                            END;
                             }

    { 45  ;2   ;Field     ;
                CaptionML=[ENU=Over 60 Days;
                           ESM=M†s de 60 d°as;
                           FRC=Plus de 60 jours;
                           ENC=Over 60 Days];
                SourceExpr=CustLedgerEntry[4]."Remaining Amt. (LCY)";
                CaptionClass=FORMAT(AgingTitle[4]);
                OnDrillDown=BEGIN
                              DrillDown(4);
                            END;
                             }

  }
  CODE
  {
    VAR
      LatestCustLedgerEntry@1020000 : Record 21;
      CustLedgerEntry@1020001 : ARRAY [4] OF Record 21;
      AgingTitle@1020002 : ARRAY [4] OF Text[30];
      AgingPeriod@1020003 : DateFormula;
      I@1020004 : Integer;
      PeriodStart@1020005 : Date;
      PeriodEnd@1020006 : Date;
      Text002@1020009 : TextConst 'ENU=Not Yet Due;ESM=Sin retraso;FRC=Pas encore dñ;ENC=Not Yet Due';
      Text003@1020010 : TextConst 'ENU=Over %1 Days;ESM=M†s de %1 d°as;FRC=Plus de %1 jours;ENC=Over %1 Days';
      Text004@1020011 : TextConst 'ENU=%1-%2 Days;ESM=%1-%2 d°as;FRC=%1 Ö %2 jours;ENC=%1-%2 Days';

    PROCEDURE CalculateAgingForPeriod@7(PeriodBeginDate@1020000 : Date;PeriodEndDate@1020001 : Date;Index@1020002 : Integer);
    VAR
      CustLedgerEntry2@1020005 : Record 21;
      NumDaysToBegin@1020003 : Integer;
      NumDaysToEnd@1020004 : Integer;
    BEGIN
      // Calculate the Aged Balance for a particular Date Range
      IF PeriodEndDate = 0D THEN
        CustLedgerEntry[Index].SETFILTER("Due Date",'%1..',PeriodBeginDate)
      ELSE
        CustLedgerEntry[Index].SETRANGE("Due Date",PeriodBeginDate,PeriodEndDate);

      CustLedgerEntry2.COPY(CustLedgerEntry[Index]);
      CustLedgerEntry[Index]."Remaining Amt. (LCY)" := 0;
      IF CustLedgerEntry2.FIND('-') THEN
        REPEAT
          CustLedgerEntry2.CALCFIELDS("Remaining Amt. (LCY)");
          CustLedgerEntry[Index]."Remaining Amt. (LCY)" :=
            CustLedgerEntry[Index]."Remaining Amt. (LCY)" + CustLedgerEntry2."Remaining Amt. (LCY)";
        UNTIL CustLedgerEntry2.NEXT = 0;

      IF PeriodBeginDate <> 0D THEN
        NumDaysToBegin := WORKDATE - PeriodBeginDate;
      IF PeriodEndDate <> 0D THEN
        NumDaysToEnd := WORKDATE - PeriodEndDate;
      IF PeriodEndDate = 0D THEN
        AgingTitle[Index] := Text002
      ELSE
        IF PeriodBeginDate = 0D THEN
          AgingTitle[Index] := STRSUBSTNO(Text003,NumDaysToEnd - 1)
        ELSE
          AgingTitle[Index] := STRSUBSTNO(Text004,NumDaysToEnd,NumDaysToBegin);
    END;

    PROCEDURE CalculateAging@5();
    BEGIN
      // Calculate the Entire Aging (four Periods)
      FOR I := 1 TO ARRAYLEN(CustLedgerEntry) DO BEGIN
        CASE I OF
          1:
            BEGIN
              PeriodEnd := 0D;
              PeriodStart := WORKDATE;
            END;
          ARRAYLEN(CustLedgerEntry):
            BEGIN
              PeriodEnd := PeriodStart - 1;
              PeriodStart := 0D;
            END;
          ELSE
            BEGIN
            PeriodEnd := PeriodStart - 1;
            PeriodStart := CALCDATE('-' + FORMAT(AgingPeriod),PeriodStart);
          END;
        END;
        CalculateAgingForPeriod(PeriodStart,PeriodEnd,I);
      END;
    END;

    PROCEDURE GetLatestPayment@6();
    BEGIN
      // Find the Latest Payment
      IF LatestCustLedgerEntry.FINDLAST THEN
        LatestCustLedgerEntry.CALCFIELDS("Amount (LCY)")
      ELSE
        LatestCustLedgerEntry.INIT;
    END;

    PROCEDURE ChangeCustomer@2();
    BEGIN
      // Change the Customer Filters
      LatestCustLedgerEntry.SETRANGE("Customer No.","No.");
      FOR I := 1 TO ARRAYLEN(CustLedgerEntry) DO
        CustLedgerEntry[I].SETRANGE("Customer No.","No.");
    END;

    PROCEDURE DrillDown@11(Index@1020000 : Integer);
    BEGIN
      IF Index = 0 THEN
        PAGE.RUNMODAL(PAGE::"Customer Ledger Entries",LatestCustLedgerEntry)
      ELSE
        PAGE.RUNMODAL(PAGE::"Customer Ledger Entries",CustLedgerEntry[Index]);
    END;

    BEGIN
    END.
  }
}

