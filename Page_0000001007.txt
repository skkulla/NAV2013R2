OBJECT Page 1007 Job Planning Lines
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Job Planning Lines;
               ESM=L°neas planificaci¢n proyecto;
               FRC=Lignes de planification de projet;
               ENC=Job Planning Lines];
    SourceTable=Table1003;
    DataCaptionExpr=Caption;
    PageType=List;
    AutoSplitKey=Yes;
    OnInit=BEGIN
             "Unit CostEditable" := TRUE;
             "Line AmountEditable" := TRUE;
             "Line Discount %Editable" := TRUE;
             "Line Discount AmountEditable" := TRUE;
             "Unit PriceEditable" := TRUE;
             "Work Type CodeEditable" := TRUE;
             "Location CodeEditable" := TRUE;
             "Variant CodeEditable" := TRUE;
             "Unit of Measure CodeEditable" := TRUE;
             DescriptionEditable := TRUE;
             "No.Editable" := TRUE;
             TypeEditable := TRUE;
             "Document No.Editable" := TRUE;
             "Currency DateEditable" := TRUE;
             "Planning DateEditable" := TRUE;

             "Job Task No.Visible" := TRUE;
             "Job No.Visible" := TRUE;
           END;

    OnOpenPage=VAR
                 Job@1000 : Record 167;
               BEGIN
                 IF Job.GET(JobNo) THEN
                   CurrPage.EDITABLE(NOT (Job.Blocked = Job.Blocked::All));

                 IF ActiveField = 1 THEN;
                 IF ActiveField = 2 THEN;
                 IF ActiveField = 3 THEN;
                 IF ActiveField = 4 THEN;
               END;

    OnNewRecord=BEGIN
                  SetUpNewLine(xRec);
                END;

    OnModifyRecord=BEGIN
                     IF "System-Created Entry" THEN BEGIN
                       IF CONFIRM(Text001,FALSE) THEN
                         "System-Created Entry" := FALSE
                       ELSE
                         ERROR('');
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           SetEditable("Qty. Transferred to Invoice" = 0);
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 127     ;1   ;ActionGroup;
                      CaptionML=[ENU=Job Planning &Line;
                                 ESM=&L°nea planificaci¢n proyecto;
                                 FRC=&Ligne de planification de projet;
                                 ENC=Job Planning &Line];
                      Image=Line }
      { 129     ;2   ;Action    ;
                      ShortCutKey=Ctrl+F7;
                      CaptionML=[ENU=Linked Job Ledger E&ntries;
                                 ESM=&Movs. proyectos vinculados;
                                 FRC=ê&critures  projet liÇes;
                                 ENC=Linked Job Ledger E&ntries];
                      Image=JobLedger;
                      OnAction=VAR
                                 JobLedgerEntry@1001 : Record 169;
                                 JobUsageLink@1000 : Record 1020;
                               BEGIN
                                 JobUsageLink.SETRANGE("Job No.","Job No.");
                                 JobUsageLink.SETRANGE("Job Task No.","Job Task No.");
                                 JobUsageLink.SETRANGE("Line No.","Line No.");

                                 IF JobUsageLink.FINDSET THEN
                                   REPEAT
                                     JobLedgerEntry.GET(JobUsageLink."Entry No.");
                                     JobLedgerEntry.MARK := TRUE;
                                   UNTIL JobUsageLink.NEXT = 0;

                                 JobLedgerEntry.MARKEDONLY(TRUE);
                                 PAGE.RUN(PAGE::"Job Ledger Entries",JobLedgerEntry);
                               END;
                                }
      { 128     ;2   ;Action    ;
                      CaptionML=[ENU=&Reservation Entries;
                                 ESM=Movs. &reserva;
                                 FRC=êcritures &rÇservation;
                                 ENC=&Reservation Entries];
                      Image=ReservationLedger;
                      OnAction=BEGIN
                                 ShowReservationEntries(TRUE);
                               END;
                                }
      { 133     ;2   ;Separator  }
      { 134     ;2   ;Action    ;
                      CaptionML=[ENU=Order &Promising;
                                 ESM=Com&promiso entrega;
                                 FRC=Pro&messe de livraison;
                                 ENC=Order &Promising];
                      Image=OrderPromising;
                      OnAction=BEGIN
                                 ShowOrderPromisingLine;
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 91      ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESM=Acci&ones;
                                 FRC=F&onctions;
                                 ENC=F&unctions];
                      Image=Action }
      { 19      ;2   ;Action    ;
                      Name=CreateJobJournalLines;
                      CaptionML=[ENU=Create Job &Journal Lines;
                                 ESM=Crear l°neas de &diario de proyectos;
                                 FRC=CrÇer des lignes &journal projet;
                                 ENC=Create Job &Journal Lines];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 JobPlanningLine@1002 : Record 1003;
                                 JobJnlLine@1004 : Record 210;
                                 JobTransferLine@1000 : Codeunit 1004;
                                 JobTransferJobPlanningLine@1003 : Page 1014;
                               BEGIN
                                 IF JobTransferJobPlanningLine.RUNMODAL = ACTION::OK THEN BEGIN
                                   JobPlanningLine.COPY(Rec);
                                   CurrPage.SETSELECTIONFILTER(JobPlanningLine);

                                   IF JobPlanningLine.FINDSET THEN
                                     REPEAT
                                       JobTransferLine.FromPlanningLineToJnlLine(
                                         JobPlanningLine,JobTransferJobPlanningLine.GetPostingDate,JobTransferJobPlanningLine.GetJobJournalTemplateName,
                                         JobTransferJobPlanningLine.GetJobJournalBatchName,JobJnlLine);
                                     UNTIL JobPlanningLine.NEXT = 0;

                                   CurrPage.UPDATE(FALSE);
                                   MESSAGE(Text002,JobPlanningLine.TABLECAPTION,JobJnlLine.TABLECAPTION);
                                 END;
                               END;
                                }
      { 14      ;2   ;Action    ;
                      CaptionML=[ENU=&Open Job Journal;
                                 ESM=Diari&o de proyectos restantes;
                                 FRC=&Ouvrir le journal projet;
                                 ENC=&Open Job Journal];
                      RunObject=Page 201;
                      RunPageLink=Job No.=FIELD(Job No.),
                                  Job Task No.=FIELD(Job Task No.);
                      Promoted=Yes;
                      Image=Journals;
                      PromotedCategory=Process }
      { 16      ;2   ;Separator  }
      { 51      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create &Sales Invoice;
                                 ESM=Crear &factura venta;
                                 FRC=CrÇer &facture de vente;
                                 ENC=Create &Sales Invoice];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Invoice;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateSalesInvoice(FALSE);
                               END;
                                }
      { 60      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Create Sales &Credit Memo;
                                 ESM=&Crear nota crÇdito venta;
                                 FRC=CrÇer note de &crÇdit de vente;
                                 ENC=Create Sales &Credit Memo];
                      Promoted=Yes;
                      Image=CreditMemo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateSalesInvoice(TRUE);
                               END;
                                }
      { 69      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Sales &Invoices / Credit Memos;
                                 ESM=&Facturas venta / Notas de CrÇdito venta;
                                 FRC=Notes de crÇdit / &Factures vente;
                                 ENC=Sales &Invoices / Credit Memos];
                      Promoted=Yes;
                      Image=GetSourceDoc;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 JobCreateInvoice.GetJobPlanningLineInvoices(Rec);
                               END;
                                }
      { 123     ;2   ;Separator  }
      { 124     ;2   ;Action    ;
                      Name=Reserve;
                      Ellipsis=Yes;
                      CaptionML=[ENU=&Reserve;
                                 ESM=&Reserva;
                                 FRC=&RÇserver;
                                 ENC=&Reserve];
                      Image=Reserve;
                      OnAction=BEGIN
                                 ShowReservation;
                               END;
                                }
      { 132     ;2   ;Action    ;
                      CaptionML=[ENU=Order &Tracking;
                                 ESM=Seguimiento &pedido;
                                 FRC=&Suivi de commande;
                                 ENC=Order &Tracking];
                      Image=OrderTracking;
                      OnAction=BEGIN
                                 ShowTracking;
                               END;
                                }
      { 130     ;2   ;Separator  }
      { 131     ;2   ;Action    ;
                      Name=DemandOverview;
                      CaptionML=[ENU=&Demand Overview;
                                 ESM=Panorama de &demanda;
                                 FRC=&Aperáu demande;
                                 ENC=&Demand Overview];
                      Image=Forecast;
                      OnAction=VAR
                                 DemandOverview@1000 : Page 5830;
                               BEGIN
                                 DemandOverview.SetCalculationParameter(TRUE);

                                 DemandOverview.Initialize(0D,3,"Job No.",'','');
                                 DemandOverview.RUNMODAL;
                               END;
                                }
      { 1900000006;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1903776506;1 ;Action    ;
                      CaptionML=[ENU=Job Actual to Budget;
                                 ESM=Proyecto real frente a presupuesto;
                                 FRC=Projet - RÇel sur budgÇtaire;
                                 ENC=Job Actual to Budget];
                      RunObject=Report 1009;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1901542506;1 ;Action    ;
                      CaptionML=[ENU=Job Analysis;
                                 ESM=An†lisis proyecto;
                                 FRC=Analyse de projet;
                                 ENC=Job Analysis];
                      RunObject=Report 1008;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1902943106;1 ;Action    ;
                      CaptionML=[ENU=Job - Planning Lines;
                                 ESM=Proyecto - L°neas planificaci¢n;
                                 FRC=Projet - Lignes de planification;
                                 ENC=Job - Planning Lines];
                      RunObject=Report 1006;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1903186006;1 ;Action    ;
                      CaptionML=[ENU=Job - Suggested Billing;
                                 ESM=Proyecto - Facturaci¢n propuesta;
                                 FRC=Projet - Facturation suggÇrÇe;
                                 ENC=Job - Suggested Billing];
                      RunObject=Report 1011;
                      Promoted=Yes;
                      Image=Report;
                      PromotedCategory=Report }
      { 1905285006;1 ;Action    ;
                      CaptionML=[ENU=Jobs - Transaction Detail;
                                 ESM=Proyectos - Movimientos;
                                 FRC=Projets - DÇtail de transaction;
                                 ENC=Jobs - Transaction Detail];
                      RunObject=Report 1007;
                      Promoted=No;
                      Image=Report;
                      PromotedCategory=Report }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 30  ;2   ;Field     ;
                SourceExpr="Job No.";
                Visible="Job No.Visible" }

    { 35  ;2   ;Field     ;
                SourceExpr="Job Task No.";
                Visible="Job Task No.Visible" }

    { 4   ;2   ;Field     ;
                SourceExpr="Line Type" }

    { 98  ;2   ;Field     ;
                SourceExpr="Usage Link";
                Visible=FALSE;
                OnValidate=BEGIN
                             UsageLinkOnAfterValidate;
                           END;
                            }

    { 7   ;2   ;Field     ;
                SourceExpr="Planning Date";
                Editable="Planning DateEditable";
                OnValidate=BEGIN
                             PlanningDateOnAfterValidate;
                           END;
                            }

    { 3   ;2   ;Field     ;
                SourceExpr="Planned Delivery Date" }

    { 76  ;2   ;Field     ;
                SourceExpr="Currency Date";
                Visible=FALSE;
                Editable="Currency DateEditable" }

    { 9   ;2   ;Field     ;
                SourceExpr="Document No.";
                Editable="Document No.Editable" }

    { 49  ;2   ;Field     ;
                SourceExpr="Line No.";
                Visible=FALSE }

    { 13  ;2   ;Field     ;
                SourceExpr=Type;
                Editable=TypeEditable;
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;
                            }

    { 23  ;2   ;Field     ;
                SourceExpr="No.";
                Editable="No.Editable";
                OnValidate=BEGIN
                             NoOnAfterValidate;
                           END;
                            }

    { 11  ;2   ;Field     ;
                SourceExpr=Description;
                Editable=DescriptionEditable }

    { 78  ;2   ;Field     ;
                SourceExpr="Gen. Bus. Posting Group";
                Visible=FALSE }

    { 80  ;2   ;Field     ;
                SourceExpr="Gen. Prod. Posting Group";
                Visible=FALSE }

    { 82  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                Editable="Variant CodeEditable";
                OnValidate=BEGIN
                             VariantCodeOnAfterValidate;
                           END;
                            }

    { 65  ;2   ;Field     ;
                SourceExpr="Location Code";
                Editable="Location CodeEditable";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;
                            }

    { 67  ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Editable="Work Type CodeEditable" }

    { 21  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                Editable="Unit of Measure CodeEditable";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                           END;
                            }

    { 5   ;2   ;Field     ;
                SourceExpr=Reserve;
                Visible=FALSE;
                OnValidate=BEGIN
                             ReserveOnAfterValidate;
                           END;
                            }

    { 15  ;2   ;Field     ;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                           END;
                            }

    { 125 ;2   ;Field     ;
                SourceExpr="Reserved Quantity" }

    { 86  ;2   ;Field     ;
                SourceExpr="Quantity (Base)";
                Visible=FALSE }

    { 100 ;2   ;Field     ;
                SourceExpr="Remaining Qty.";
                Visible=FALSE }

    { 43  ;2   ;Field     ;
                SourceExpr="Direct Unit Cost (LCY)";
                Visible=FALSE;
                Editable=FALSE }

    { 41  ;2   ;Field     ;
                SourceExpr="Unit Cost";
                Editable="Unit CostEditable" }

    { 26  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)" }

    { 74  ;2   ;Field     ;
                SourceExpr="Total Cost" }

    { 102 ;2   ;Field     ;
                SourceExpr="Remaining Total Cost";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Total Cost (LCY)" }

    { 104 ;2   ;Field     ;
                SourceExpr="Remaining Total Cost (LCY)";
                Visible=FALSE }

    { 27  ;2   ;Field     ;
                SourceExpr="Unit Price";
                Editable="Unit PriceEditable" }

    { 58  ;2   ;Field     ;
                SourceExpr="Unit Price (LCY)";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Line Amount";
                Editable="Line AmountEditable" }

    { 106 ;2   ;Field     ;
                SourceExpr="Remaining Line Amount";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Line Amount (LCY)";
                Visible=FALSE }

    { 108 ;2   ;Field     ;
                SourceExpr="Remaining Line Amount (LCY)";
                Visible=FALSE }

    { 45  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Editable="Line Discount AmountEditable" }

    { 2   ;2   ;Field     ;
                SourceExpr="Line Discount %";
                Editable="Line Discount %Editable" }

    { 52  ;2   ;Field     ;
                SourceExpr="Total Price";
                Visible=FALSE }

    { 33  ;2   ;Field     ;
                SourceExpr="Total Price (LCY)";
                Visible=FALSE }

    { 110 ;2   ;Field     ;
                SourceExpr="Qty. Posted";
                Visible=FALSE }

    { 112 ;2   ;Field     ;
                SourceExpr="Qty. to Transfer to Journal" }

    { 114 ;2   ;Field     ;
                SourceExpr="Posted Total Cost";
                Visible=FALSE }

    { 116 ;2   ;Field     ;
                SourceExpr="Posted Total Cost (LCY)";
                Visible=FALSE }

    { 118 ;2   ;Field     ;
                SourceExpr="Posted Line Amount";
                Visible=FALSE }

    { 120 ;2   ;Field     ;
                SourceExpr="Posted Line Amount (LCY)";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr="Qty. Transferred to Invoice";
                OnDrillDown=BEGIN
                              DrillDownJobInvoices;
                            END;
                             }

    { 8   ;2   ;Field     ;
                SourceExpr="Qty. to Transfer to Invoice" }

    { 10  ;2   ;Field     ;
                SourceExpr="Qty. Invoiced";
                OnDrillDown=BEGIN
                              DrillDownJobInvoices;
                            END;
                             }

    { 12  ;2   ;Field     ;
                SourceExpr="Qty. to Invoice" }

    { 17  ;2   ;Field     ;
                SourceExpr="Invoiced Amount (LCY)" }

    { 37  ;2   ;Field     ;
                SourceExpr="Invoiced Cost Amount (LCY)" }

    { 84  ;2   ;Field     ;
                SourceExpr="User ID";
                Visible=FALSE }

    { 61  ;2   ;Field     ;
                SourceExpr="Serial No.";
                Visible=FALSE }

    { 63  ;2   ;Field     ;
                SourceExpr="Lot No.";
                Visible=FALSE }

    { 47  ;2   ;Field     ;
                SourceExpr="Job Contract Entry No." }

    { 92  ;2   ;Field     ;
                SourceExpr="Ledger Entry Type";
                Visible=FALSE }

    { 94  ;2   ;Field     ;
                SourceExpr="Ledger Entry No.";
                Visible=FALSE }

    { 96  ;2   ;Field     ;
                SourceExpr="System-Created Entry";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=Overdue;
                           ESM=Vencidos;
                           FRC=En retard;
                           ENC=Overdue];
                SourceExpr=Overdue;
                Visible=FALSE;
                Editable=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      JobCreateInvoice@1000 : Codeunit 1002;
      ActiveField@1001 : ' ,Cost,CostLCY,PriceLCY,Price';
      Text001@1002 : TextConst 'ENU=This job planning line was automatically generated. Do you want to continue?;ESM=Esta l°nea de planificaci¢n de proyecto se gener¢ autom†ticamente. ®Desea continuar?;FRC=Cette ligne planification projet a ÇtÇ gÇnÇrÇe automatiquement. “tes-vous certain de vouloir continuerˇ?;ENC=This job planning line was automatically generated. Do you want to continue?';
      JobNo@1003 : Code[20];
      "Job No.Visible"@19020212 : Boolean INDATASET;
      "Job Task No.Visible"@19035147 : Boolean INDATASET;
      "Planning DateEditable"@19058788 : Boolean INDATASET;
      "Currency DateEditable"@19063095 : Boolean INDATASET;
      "Document No.Editable"@19064841 : Boolean INDATASET;
      TypeEditable@19028748 : Boolean INDATASET;
      "No.Editable"@19005397 : Boolean INDATASET;
      DescriptionEditable@19061412 : Boolean INDATASET;
      "Unit of Measure CodeEditable"@19052748 : Boolean INDATASET;
      "Variant CodeEditable"@19003611 : Boolean INDATASET;
      "Location CodeEditable"@19048234 : Boolean INDATASET;
      "Work Type CodeEditable"@19027008 : Boolean INDATASET;
      "Unit PriceEditable"@19072822 : Boolean INDATASET;
      "Line Discount AmountEditable"@19003541 : Boolean INDATASET;
      "Line Discount %Editable"@19026131 : Boolean INDATASET;
      "Line AmountEditable"@19064331 : Boolean INDATASET;
      "Unit CostEditable"@19057007 : Boolean INDATASET;
      Text002@1005 : TextConst 'ENU=The %1 was successfully transferred to a %2.;ESM=El %1 se transfiri¢ correctamente a un %2.;FRC=Le %1 a ÇtÇ transfÇrÇ avec succäs vers un %2.;ENC=The %1 was successfully transferred to a %2.';

    PROCEDURE CreateSalesInvoice@1(CrMemo@1000 : Boolean);
    VAR
      JobPlanningLine@1007 : Record 1003;
      JobCreateInvoice@1006 : Codeunit 1002;
    BEGIN
      TESTFIELD("Line No.");
      JobPlanningLine.COPY(Rec);
      CurrPage.SETSELECTIONFILTER(JobPlanningLine);
      JobCreateInvoice.CreateSalesInvoice(JobPlanningLine,CrMemo)
    END;

    LOCAL PROCEDURE SetEditable@2(Edit@1000 : Boolean);
    BEGIN
      "Planning DateEditable" := Edit;
      "Currency DateEditable" := Edit;
      "Document No.Editable" := Edit;
      TypeEditable := Edit;
      "No.Editable" := Edit;
      DescriptionEditable := Edit;
      "Unit of Measure CodeEditable" := Edit;
      "Variant CodeEditable" := Edit;
      "Location CodeEditable" := Edit;
      "Work Type CodeEditable" := Edit;
      "Unit PriceEditable" := Edit;
      "Line Discount AmountEditable" := Edit;
      "Line Discount %Editable" := Edit;
      "Line AmountEditable" := Edit;
      "Unit CostEditable" := Edit;
    END;

    PROCEDURE SetActiveField@3(ActiveField2@1000 : Integer);
    BEGIN
      ActiveField := ActiveField2;
    END;

    PROCEDURE SetJobNo@12(No@1000 : Code[20]);
    BEGIN
      JobNo := No;
    END;

    PROCEDURE SetJobNoVisible@4(JobNoVisible@1000 : Boolean);
    BEGIN
      "Job No.Visible" := JobNoVisible;
    END;

    PROCEDURE SetJobTaskNoVisible@5(JobTaskNoVisible@1000 : Boolean);
    BEGIN
      "Job Task No.Visible" := JobTaskNoVisible;
    END;

    LOCAL PROCEDURE PerformAutoReserve@10();
    BEGIN
      IF (Reserve = Reserve::Always) AND
         ("Remaining Qty. (Base)" <> 0)
      THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE UsageLinkOnAfterValidate@19044160();
    BEGIN
      PerformAutoReserve;
    END;

    LOCAL PROCEDURE PlanningDateOnAfterValidate@19037512();
    BEGIN
      IF "Planning Date" <> xRec."Planning Date" THEN
        PerformAutoReserve;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      IF "No." <> xRec."No." THEN
        PerformAutoReserve;
    END;

    LOCAL PROCEDURE VariantCodeOnAfterValidate@19003320();
    BEGIN
      IF "Variant Code" <> xRec."Variant Code" THEN
        PerformAutoReserve;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@19034787();
    BEGIN
      IF "Location Code" <> xRec."Location Code" THEN
        PerformAutoReserve;
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      PerformAutoReserve;
    END;

    LOCAL PROCEDURE ReserveOnAfterValidate@19004502();
    BEGIN
      PerformAutoReserve;
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      PerformAutoReserve;
      IF (Type = Type::Item) AND (Quantity <> xRec.Quantity) THEN
        CurrPage.UPDATE(TRUE);
    END;

    BEGIN
    END.
  }
}

