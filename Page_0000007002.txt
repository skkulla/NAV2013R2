OBJECT Page 7002 Sales Prices
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Sales Prices;
               ESM=Precios ventas;
               FRC=Prix de vente;
               ENC=Sales Prices];
    SaveValues=Yes;
    SourceTable=Table7002;
    DataCaptionExpr=GetCaption;
    DelayedInsert=Yes;
    PageType=Worksheet;
    OnInit=BEGIN
             SalesCodeFilterCtrlEnable := TRUE;
             "Sales CodeEditable" := TRUE;
           END;

    OnOpenPage=BEGIN
                 GetRecFilters;
                 SetRecFilters;
               END;

    OnAfterGetCurrRecord=BEGIN
                           "Sales CodeEditable" := "Sales Type" <> "Sales Type"::"All Customers"
                         END;

  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 20  ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General] }

    { 28  ;2   ;Field     ;
                CaptionML=[ENU=Sales Type Filter;
                           ESM=Filtro tipo ventas;
                           FRC=Filtre type vente;
                           ENC=Sales Type Filter];
                OptionCaptionML=[ENU=Customer,Customer Price Group,All Customers,Campaign,None;
                                 ESM=Cliente,Grupo precio cliente,Todos los clientes,Campa¤a,Ninguno;
                                 FRC=Client,Groupe de prix du client,Tous les clients,Promotion,Aucun;
                                 ENC=Customer,Customer Price Group,All Customers,Campaign,None];
                SourceExpr=SalesTypeFilter;
                OnValidate=BEGIN
                             SalesTypeFilterOnAfterValidate;
                           END;
                            }

    { 26  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl;
                CaptionML=[ENU=Sales Code Filter;
                           ESM=Filtro c¢d. ventas;
                           FRC=Filtre code vente;
                           ENC=Sales Code Filter];
                SourceExpr=SalesCodeFilter;
                Enabled=SalesCodeFilterCtrlEnable;
                OnValidate=BEGIN
                             SalesCodeFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           CustList@1005 : Page 22;
                           CustPriceGrList@1004 : Page 7;
                           CampaignList@1002 : Page 5087;
                         BEGIN
                           IF SalesTypeFilter = SalesTypeFilter::"All Customers" THEN
                             EXIT;

                           CASE SalesTypeFilter OF
                             SalesTypeFilter::Customer:
                               BEGIN
                                 CustList.LOOKUPMODE := TRUE;
                                 IF CustList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::"Customer Price Group":
                               BEGIN
                                 CustPriceGrList.LOOKUPMODE := TRUE;
                                 IF CustPriceGrList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CustPriceGrList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                             SalesTypeFilter::Campaign:
                               BEGIN
                                 CampaignList.LOOKUPMODE := TRUE;
                                 IF CampaignList.RUNMODAL = ACTION::LookupOK THEN
                                   Text := CampaignList.GetSelectionFilter
                                 ELSE
                                   EXIT(FALSE);
                               END;
                           END;

                           EXIT(TRUE);
                         END;
                          }

    { 10  ;2   ;Field     ;
                Name=ItemNoFilterCtrl;
                CaptionML=[ENU=Item No. Filter;
                           ESM=Filtro n§ prod.;
                           FRC=Filtre nø article;
                           ENC=Item No. Filter];
                SourceExpr=ItemNoFilter;
                OnValidate=BEGIN
                             ItemNoFilterOnAfterValidate;
                           END;

                OnLookup=VAR
                           ItemList@1002 : Page 31;
                         BEGIN
                           ItemList.LOOKUPMODE := TRUE;
                           IF ItemList.RUNMODAL = ACTION::LookupOK THEN
                             Text := ItemList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 34  ;2   ;Field     ;
                CaptionML=[ENU=Starting Date Filter;
                           ESM=Filtro fecha inicio;
                           FRC=Filtre date d‚but;
                           ENC=Starting Date Filter];
                SourceExpr=StartingDateFilter;
                OnValidate=VAR
                             ApplicationMgt@1030 : Codeunit 1;
                           BEGIN
                             IF ApplicationMgt.MakeDateFilter(StartingDateFilter) = 0 THEN;
                             StartingDateFilterOnAfterValid;
                           END;
                            }

    { 38  ;2   ;Field     ;
                Name=SalesCodeFilterCtrl2;
                CaptionML=[ENU=Currency Code Filter;
                           ESM=Filtro c¢d. divisa;
                           FRC=Filtre code devise;
                           ENC=Currency Code Filter];
                SourceExpr=CurrencyCodeFilter;
                OnValidate=BEGIN
                             CurrencyCodeFilterOnAfterValid;
                           END;

                OnLookup=VAR
                           CurrencyList@1000 : Page 5;
                         BEGIN
                           CurrencyList.LOOKUPMODE := TRUE;
                           IF CurrencyList.RUNMODAL = ACTION::LookupOK THEN
                             Text := CurrencyList.GetSelectionFilter
                           ELSE
                             EXIT(FALSE);

                           EXIT(TRUE);
                         END;
                          }

    { 1   ;1   ;Group     ;
                GroupType=Repeater }

    { 32  ;2   ;Field     ;
                SourceExpr="Sales Type" }

    { 18  ;2   ;Field     ;
                SourceExpr="Sales Code";
                Editable="Sales CodeEditable" }

    { 4   ;2   ;Field     ;
                SourceExpr="Item No." }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Currency Code";
                Visible=FALSE }

    { 8   ;2   ;Field     ;
                SourceExpr="Unit of Measure Code" }

    { 12  ;2   ;Field     ;
                SourceExpr="Minimum Quantity" }

    { 6   ;2   ;Field     ;
                SourceExpr="Unit Price" }

    { 36  ;2   ;Field     ;
                SourceExpr="Starting Date" }

    { 2   ;2   ;Field     ;
                SourceExpr="Ending Date" }

    { 16  ;2   ;Field     ;
                SourceExpr="Price Includes VAT";
                Visible=FALSE }

    { 25  ;2   ;Field     ;
                SourceExpr="Allow Line Disc.";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Gr. (Price)";
                Visible=FALSE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      Cust@1001 : Record 18;
      CustPriceGr@1005 : Record 6;
      Campaign@1008 : Record 5071;
      SalesTypeFilter@1000 : 'Customer,Customer Price Group,All Customers,Campaign,None';
      SalesCodeFilter@1003 : Text[250];
      ItemNoFilter@1011 : Text[250];
      StartingDateFilter@1006 : Text[30];
      CurrencyCodeFilter@1002 : Text[250];
      Text000@1007 : TextConst 'ENU=All Customers;ESM=Todos clientes;FRC=Tous les clients;ENC=All Customers';
      Text001@1009 : TextConst 'ENU=No %1 within the filter %2.;ESM=El filtro %2 no contiene %1.;FRC=Aucun %1 dans le filtre %2.;ENC=No %1 within the filter %2.';
      "Sales CodeEditable"@19031640 : Boolean INDATASET;
      SalesCodeFilterCtrlEnable@19013164 : Boolean INDATASET;

    PROCEDURE GetRecFilters@2();
    BEGIN
      IF GETFILTERS <> '' THEN BEGIN
        IF GETFILTER("Sales Type") <> '' THEN
          SalesTypeFilter := GetSalesTypeFilter
        ELSE
          SalesTypeFilter := SalesTypeFilter::None;

        SalesCodeFilter := GETFILTER("Sales Code");
        ItemNoFilter := GETFILTER("Item No.");
        CurrencyCodeFilter := GETFILTER("Currency Code");
      END;

      EVALUATE(StartingDateFilter,GETFILTER("Starting Date"));
    END;

    PROCEDURE SetRecFilters@1();
    BEGIN
      SalesCodeFilterCtrlEnable := TRUE;

      IF SalesTypeFilter <> SalesTypeFilter::None THEN
        SETRANGE("Sales Type",SalesTypeFilter)
      ELSE
        SETRANGE("Sales Type");

      IF SalesTypeFilter IN [SalesTypeFilter::"All Customers",SalesTypeFilter::None] THEN BEGIN
        SalesCodeFilterCtrlEnable := FALSE;
        SalesCodeFilter := '';
      END;

      IF SalesCodeFilter <> '' THEN
        SETFILTER("Sales Code",SalesCodeFilter)
      ELSE
        SETRANGE("Sales Code");

      IF StartingDateFilter <> '' THEN
        SETFILTER("Starting Date",StartingDateFilter)
      ELSE
        SETRANGE("Starting Date");

      IF ItemNoFilter <> '' THEN BEGIN
        SETFILTER("Item No.",ItemNoFilter);
      END ELSE
        SETRANGE("Item No.");

      IF CurrencyCodeFilter <> '' THEN BEGIN
        SETFILTER("Currency Code",CurrencyCodeFilter);
      END ELSE
        SETRANGE("Currency Code");

      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          CheckFilters(DATABASE::Customer,SalesCodeFilter);
        SalesTypeFilter::"Customer Price Group":
          CheckFilters(DATABASE::"Customer Price Group",SalesCodeFilter);
        SalesTypeFilter::Campaign:
          CheckFilters(DATABASE::Campaign,SalesCodeFilter);
      END;
      CheckFilters(DATABASE::Item,ItemNoFilter);
      CheckFilters(DATABASE::Currency,CurrencyCodeFilter);

      CurrPage.UPDATE(FALSE);
    END;

    PROCEDURE GetCaption@3() : Text[250];
    VAR
      ObjTransl@1000 : Record 377;
      SourceTableName@1002 : Text[100];
      SalesSrcTableName@1003 : Text[100];
      Description@1001 : Text[250];
    BEGIN
      GetRecFilters;
      "Sales CodeEditable" := "Sales Type" <> "Sales Type"::"All Customers";

      SourceTableName := '';
      IF ItemNoFilter <> '' THEN
        SourceTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,27);

      SalesSrcTableName := '';
      CASE SalesTypeFilter OF
        SalesTypeFilter::Customer:
          BEGIN
            SalesSrcTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,18);
            Cust."No." := SalesCodeFilter;
            IF Cust.FIND THEN
              Description := Cust.Name;
          END;
        SalesTypeFilter::"Customer Price Group":
          BEGIN
            SalesSrcTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,6);
            CustPriceGr.Code := SalesCodeFilter;
            IF CustPriceGr.FIND THEN
              Description := CustPriceGr.Description;
          END;
        SalesTypeFilter::Campaign:
          BEGIN
            SalesSrcTableName := ObjTransl.TranslateObject(ObjTransl."Object Type"::Table,5071);
            Campaign."No." := SalesCodeFilter;
            IF Campaign.FIND THEN
              Description := Campaign.Description;
          END;
        SalesTypeFilter::"All Customers":
          BEGIN
            SalesSrcTableName := Text000;
            Description := '';
          END;
      END;

      IF SalesSrcTableName = Text000 THEN
        EXIT(STRSUBSTNO('%1 %2 %3',SalesSrcTableName,SourceTableName,ItemNoFilter));
      EXIT(STRSUBSTNO('%1 %2 %3 %4 %5',SalesSrcTableName,SalesCodeFilter,Description,SourceTableName,ItemNoFilter));
    END;

    PROCEDURE CheckFilters@4(TableNo@1000 : Integer;FilterTxt@1001 : Text[250]);
    VAR
      FilterRecordRef@1002 : RecordRef;
      FilterFieldRef@1003 : FieldRef;
    BEGIN
      IF FilterTxt = '' THEN
        EXIT;
      CLEAR(FilterRecordRef);
      CLEAR(FilterFieldRef);
      FilterRecordRef.OPEN(TableNo);
      FilterFieldRef := FilterRecordRef.FIELD(1);
      FilterFieldRef.SETFILTER(FilterTxt);
      IF FilterRecordRef.ISEMPTY THEN
        ERROR(Text001,FilterRecordRef.CAPTION,FilterTxt);
    END;

    LOCAL PROCEDURE SalesCodeFilterOnAfterValidate@19067727();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE SalesTypeFilterOnAfterValidate@19024044();
    BEGIN
      CurrPage.SAVERECORD;
      SalesCodeFilter := '';
      SetRecFilters;
    END;

    LOCAL PROCEDURE StartingDateFilterOnAfterValid@19055286();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE ItemNoFilterOnAfterValidate@19009808();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE CurrencyCodeFilterOnAfterValid@19015290();
    BEGIN
      CurrPage.SAVERECORD;
      SetRecFilters;
    END;

    LOCAL PROCEDURE GetSalesTypeFilter@1000() : Integer;
    BEGIN
      CASE GETFILTER("Sales Type") OF
        FORMAT("Sales Type"::Customer):
          EXIT(0);
        FORMAT("Sales Type"::"Customer Price Group"):
          EXIT(1);
        FORMAT("Sales Type"::"All Customers"):
          EXIT(2);
        FORMAT("Sales Type"::Campaign):
          EXIT(3);
      END;
    END;

    BEGIN
    END.
  }
}

