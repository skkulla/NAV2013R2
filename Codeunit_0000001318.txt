OBJECT Codeunit 1318 Mini Trial Balance Mgt.
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      ColumnLayoutArr@1019 : ARRAY [9,3] OF Record 334;
      AccScheduleLineArr@1018 : ARRAY [9] OF Record 85;
      AccScheduleLine@1017 : Record 85;
      TempColumnLayout@1016 : TEMPORARY Record 334;
      AccSchedManagement@1015 : Codeunit 8;
      PeriodType@1012 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      CurrentColumnLayoutName@1001 : Code[10];
      CurrentAccScheduleName@1000 : Code[10];
      LessRowsThanExpectedErr@1002 : TextConst 'ENU=The Trial Balance chart is not set up correctly. There are less rows in the account schedules than expected.;ESM=El gr fico Balance comprobaci¢n no se ha configurado correctamente. Hay menos filas en las estructuras de cuentas de las previstas.;FRC=Le graphique Balance de v‚rification n''est pas configur‚ correctement. Il y a moins de lignes dans les tableaux d''analyse que pr‚vu.;ENC=The Trial Balance chart is not set up correctly. There are less rows in the account schedules than expected.';
      MoreRowsThanExpectedErr@1003 : TextConst 'ENU=The Trial Balance chart is not set up correctly. There are more rows in the account schedules than expected.;ESM=El gr fico Balance comprobaci¢n no se ha configurado correctamente. Hay m s filas en las estructuras de cuentas de las previstas.;FRC=Le graphique Balance de v‚rification n''est pas configur‚ correctement. Il y a plus de lignes dans les tableaux d''analyse que pr‚vu.;ENC=The Trial Balance chart is not set up correctly. There are more rows in the account schedules than expected.';

    PROCEDURE LoadData@7(VAR DescriptionsArr@1003 : ARRAY [9] OF Text[80];VAR ValuesArr@1002 : ARRAY [9,3] OF Decimal;VAR PeriodCaptionTxt@1001 : ARRAY [3] OF Text);
    BEGIN
      PeriodType := PeriodType::"Accounting Period";
      Initialize;
      AccSchedManagement.FindPeriod(AccScheduleLine,'',PeriodType);
      UpdateArrays(DescriptionsArr,ValuesArr,PeriodCaptionTxt);
    END;

    LOCAL PROCEDURE Initialize@1();
    VAR
      MiniTrialBalanceSetup@1000 : Record 1312;
    BEGIN
      MiniTrialBalanceSetup.GET;

      CurrentColumnLayoutName := MiniTrialBalanceSetup.ColumnLayoutName;
      CurrentAccScheduleName := MiniTrialBalanceSetup.AccountScheduleName;

      AccSchedManagement.CopyColumnsToTemp(CurrentColumnLayoutName,TempColumnLayout);
      AccSchedManagement.OpenSchedule(CurrentAccScheduleName,AccScheduleLine);
      AccSchedManagement.OpenColumns(CurrentColumnLayoutName,TempColumnLayout);
      AccSchedManagement.CheckAnalysisView(CurrentAccScheduleName,CurrentColumnLayoutName,TRUE);
    END;

    LOCAL PROCEDURE UpdateArrays@131(VAR DescriptionsArr@1002 : ARRAY [9] OF Text[80];VAR ValuesArr@1001 : ARRAY [9,3] OF Decimal;VAR PeriodCaptionTxt@1000 : ARRAY [3] OF Text);
    VAR
      Offset@1007 : Integer;
      Counter@1006 : Integer;
      FromDate@1005 : Date;
      ToDate@1004 : Date;
      FiscalStartDate@1003 : Date;
    BEGIN
      CLEAR(PeriodCaptionTxt);
      Counter := 0;

      IF AccScheduleLine.FINDSET THEN
        REPEAT
          Counter := Counter + 1;
          IF Counter > ARRAYLEN(ValuesArr,1) THEN
            ERROR(MoreRowsThanExpectedErr);

          DescriptionsArr[Counter] := AccScheduleLine.Description;
          IF AccScheduleLine.Totaling = '' THEN BEGIN
            ValuesArr[Counter,1] := 0;
            ValuesArr[Counter,2] := 0;
            ValuesArr[Counter,3] := 0;
          END;

          TempColumnLayout.FINDSET;
          Offset := 0;
          REPEAT
            Offset := Offset + 1;
            ValuesArr[Counter,Offset] := AccSchedManagement.CalcCell(AccScheduleLine,TempColumnLayout,FALSE);
            ColumnLayoutArr[Counter,Offset] := TempColumnLayout;
            AccScheduleLineArr[Counter] := AccScheduleLine;
            AccSchedManagement.CalcColumnDates(
              TempColumnLayout."Comparison Date Formula",TempColumnLayout."Comparison Period Formula",FromDate,ToDate,FiscalStartDate);
            PeriodCaptionTxt[Offset] := STRSUBSTNO('%1..%2',FromDate,ToDate);
          UNTIL TempColumnLayout.NEXT = 0;
        UNTIL AccScheduleLine.NEXT = 0;

      IF Counter < ARRAYLEN(ValuesArr,1) THEN
        ERROR(LessRowsThanExpectedErr);
    END;

    PROCEDURE DrillDown@5(RowNo@1001 : Integer;ColumnNo@1000 : Integer);
    BEGIN
      TempColumnLayout := ColumnLayoutArr[RowNo,ColumnNo];
      AccScheduleLine := AccScheduleLineArr[RowNo];
      AccSchedManagement.DrillDown(TempColumnLayout,AccScheduleLine);
    END;

    PROCEDURE NextPeriod@8(VAR DescriptionsArr@1001 : ARRAY [9] OF Text[80];VAR ValuesArr@1000 : ARRAY [9,3] OF Decimal;VAR PeriodCaptionTxt@1003 : ARRAY [3] OF Text);
    BEGIN
      UpdatePeriod(DescriptionsArr,ValuesArr,PeriodCaptionTxt,'>=');
    END;

    PROCEDURE PreviousPeriod@9(VAR DescriptionsArr@1001 : ARRAY [9] OF Text[80];VAR ValuesArr@1000 : ARRAY [9,3] OF Decimal;VAR PeriodCaptionTxt@1002 : ARRAY [3] OF Text);
    BEGIN
      UpdatePeriod(DescriptionsArr,ValuesArr,PeriodCaptionTxt,'<=');
    END;

    LOCAL PROCEDURE UpdatePeriod@6(VAR DescriptionsArr@1003 : ARRAY [9] OF Text[80];VAR ValuesArr@1002 : ARRAY [9,3] OF Decimal;VAR PeriodCaptionTxt@1001 : ARRAY [3] OF Text;SearchText@1000 : Text[3]);
    BEGIN
      AccSchedManagement.FindPeriod(AccScheduleLine,SearchText,PeriodType);
      UpdateArrays(DescriptionsArr,ValuesArr,PeriodCaptionTxt);
    END;

    BEGIN
    END.
  }
}

