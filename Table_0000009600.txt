OBJECT Table 9600 XML Schema
{
  OBJECT-PROPERTIES
  {
    Date=12/02/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10.00.35800;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnDelete=VAR
               XMLSchemaElement@1000 : Record 9610;
               XMLSchemaRestriction@1001 : Record 9611;
             BEGIN
               XMLSchemaElement.SETRANGE("XML Schema Code",Code);
               XMLSchemaElement.DELETEALL;
               XMLSchemaRestriction.SETRANGE("XML Schema Code",Code);
               XMLSchemaRestriction.DELETEALL;
             END;

    CaptionML=[ENU=XML Schema;
               ESM=Esquema XML;
               FRC=Sch‚ma XML;
               ENC=XML Schema];
    LookupPageID=Page9600;
    DrillDownPageID=Page9600;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code] }
    { 2   ;   ;Description         ;Text80        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 3   ;   ;Target Namespace    ;Text250       ;CaptionML=[ENU=Target Namespace;
                                                              ESM=Espacio de nombres de destino;
                                                              FRC=Espace de noms cible;
                                                              ENC=Target Namespace] }
    { 4   ;   ;XSD                 ;BLOB          ;CaptionML=[ENU=XSD;
                                                              ESM=XSD;
                                                              FRC=XSD;
                                                              ENC=XSD] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ReplaceQst@1000 : TextConst 'ENU=Do you want to replace the existing definition?;ESM=¨Confirma que desea sustituir la definici¢n existente?;FRC=Souhaitez-vous remplacer la d‚finition existante ?;ENC=Do you want to replace the existing definition?';

    PROCEDURE LoadSchema@4();
    VAR
      TempBlob@1004 : Record 99008535;
      FileMgt@1003 : Codeunit 419;
      SEPAXMLSchemaManagement@1005 : Codeunit 9610;
      XMLExists@1002 : Boolean;
      FileName@1001 : Text;
      i@1000 : Integer;
    BEGIN
      CALCFIELDS(XSD);
      XMLExists := XSD.HASVALUE;
      FileName := FileMgt.BLOBImport(TempBlob,'*.xsd');
      IF FileName = '' THEN
        EXIT;
      XSD := TempBlob.Blob;
      IF XMLExists THEN
        IF NOT CONFIRM(ReplaceQst,FALSE) THEN
          EXIT;
      IF STRPOS(FileName,'\') <> 0 THEN BEGIN
        i := STRLEN(FileName);
        WHILE (i > 0) AND (FileName[i] <> '\') DO
          i := i - 1;
      END;

      SEPAXMLSchemaManagement.LoadSchema(Rec);
      Description := CONVERTSTR(COPYSTR(FileName,i + 1),' ','_');
      MODIFY;
    END;

    PROCEDURE ExportSchema@6(ShowFileDialog@1002 : Boolean) : Text;
    VAR
      TempBlob@1001 : Record 99008535;
      FileMgt@1000 : Codeunit 419;
    BEGIN
      CALCFIELDS(XSD);
      IF XSD.HASVALUE THEN BEGIN
        TempBlob.Blob := XSD;
        EXIT(FileMgt.BLOBExport(TempBlob,'*.xsd',ShowFileDialog));
      END;
    END;

    PROCEDURE GetSchemaContext@1() : Text;
    VAR
      XMLSchemaElement@1000 : Record 9610;
      XMLSchemaElement2@1001 : Record 9610;
      Context@1002 : Text;
    BEGIN
      XMLSchemaElement.SETRANGE("XML Schema Code",Code);
      XMLSchemaElement.SETCURRENTKEY(Indentation);

      Context := '';
      IF XMLSchemaElement.FINDSET THEN
        REPEAT
          XMLSchemaElement2.COPYFILTERS(XMLSchemaElement);
          XMLSchemaElement2.SETRANGE(Indentation,XMLSchemaElement.Indentation);
          IF XMLSchemaElement2.COUNT > 1 THEN
            EXIT(Context);
          Context := XMLSchemaElement.GetFullPath;
        UNTIL XMLSchemaElement.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

