OBJECT Codeunit 82 Sales-Post + Print
{
  OBJECT-PROPERTIES
  {
    Date=09/07/12;
    Time=12:00:00 PM;
    Version List=NAVW17.00,NAVNA7.00;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=&Ship,&Invoice,Ship &and Invoice;ESM=&Enviar,&Facturar,E&nviar y facturar;FRC=&Livrer,&Facturer,Livrer &et Facturer;ENC=&Ship,&Invoice,Ship &and Invoice';
      Text001@1001 : TextConst 'ENU=Do you want to post and print the %1?;ESM=¨Confirma que desea registrar e imprimir el/la %1?;FRC=Voulez-vous reporter et imprimer la %1?;ENC=Do you want to post and print the %1?';
      Text002@1002 : TextConst 'ENU=&Receive,&Invoice,Receive &and Invoice;ESM=&Recibir,&Facturar,R&ecibir y facturar;FRC=&R‚ception,&Facture,R‚ception &et Facture;ENC=&Receive,&Invoice,Receive &and Invoice';
      SalesHeader@1003 : Record 36;
      SalesShptHeader@1004 : Record 110;
      SalesInvHeader@1005 : Record 112;
      SalesCrMemoHeader@1006 : Record 114;
      ReturnRcptHeader@1007 : Record 6660;
      ReportSelection@1008 : Record 77;
      Selection@1010 : Integer;

    LOCAL PROCEDURE Code@2();
    VAR
      SalesSetup@1001 : Record 311;
      SalesPostViaJobQueue@1000 : Codeunit 88;
      EInvoiceMgt@1020000 : Codeunit 10145;
    BEGIN
      WITH SalesHeader DO BEGIN
        EInvoiceMgt.EDocPrintValidation(0,"No.");
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              Selection := STRMENU(Text000,3);
              IF Selection = 0 THEN
                EXIT;
              Ship := Selection IN [1,3];
              Invoice := Selection IN [2,3];
            END;
          "Document Type"::"Return Order":
            BEGIN
              Selection := STRMENU(Text002,3);
              IF Selection = 0 THEN
                EXIT;
              Receive := Selection IN [1,3];
              Invoice := Selection IN [2,3];
            END
          ELSE
            IF NOT
               CONFIRM(
                 Text001,FALSE,
                 "Document Type")
            THEN
              EXIT;
        END;

        "Print Posted Documents" := TRUE;

        SalesSetup.GET;
        IF SalesSetup."Post & Print with Job Queue" THEN
          SalesPostViaJobQueue.EnqueueSalesDoc(SalesHeader)
        ELSE BEGIN
          CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
          GetReport(SalesHeader);
        END;
        COMMIT;
      END;
    END;

    PROCEDURE GetReport@3(VAR SalesHeader@1000 : Record 36);
    BEGIN
      WITH SalesHeader DO
        CASE "Document Type" OF
          "Document Type"::Order:
            BEGIN
              IF Ship THEN BEGIN
                SalesShptHeader."No." := "Last Shipping No.";
                SalesShptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Shipment");
              END;
              IF Invoice THEN BEGIN
                SalesInvHeader."No." := "Last Posting No.";
                SalesInvHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Invoice");
              END;
            END;
          "Document Type"::Invoice:
            BEGIN
              IF "Last Posting No." = '' THEN
                SalesInvHeader."No." := "No."
              ELSE
                SalesInvHeader."No." := "Last Posting No.";
              SalesInvHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"S.Invoice");
            END;
          "Document Type"::"Return Order":
            BEGIN
              IF Receive THEN BEGIN
                ReturnRcptHeader."No." := "Last Return Receipt No.";
                ReturnRcptHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Ret.Rcpt.");
              END;
              IF Invoice THEN BEGIN
                SalesCrMemoHeader."No." := "Last Posting No.";
                SalesCrMemoHeader.SETRECFILTER;
                PrintReport(ReportSelection.Usage::"S.Cr.Memo");
              END;
            END;
          "Document Type"::"Credit Memo":
            BEGIN
              IF "Last Posting No." = '' THEN
                SalesCrMemoHeader."No." := "No."
              ELSE
                SalesCrMemoHeader."No." := "Last Posting No.";
              SalesCrMemoHeader.SETRECFILTER;
              PrintReport(ReportSelection.Usage::"S.Cr.Memo");
            END;
        END;
    END;

    LOCAL PROCEDURE PrintReport@1(ReportUsage@1000 : Integer);
    BEGIN
      ReportSelection.RESET;
      ReportSelection.SETRANGE(Usage,ReportUsage);
      ReportSelection.FINDSET;
      REPEAT
        ReportSelection.TESTFIELD("Report ID");
        CASE ReportUsage OF
          ReportSelection.Usage::"SM.Invoice":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesInvHeader);
          ReportSelection.Usage::"SM.Credit Memo":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesCrMemoHeader);
          ReportSelection.Usage::"S.Invoice":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesInvHeader);
          ReportSelection.Usage::"S.Cr.Memo":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesCrMemoHeader);
          ReportSelection.Usage::"S.Shipment":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,SalesShptHeader);
          ReportSelection.Usage::"S.Ret.Rcpt.":
            REPORT.RUN(ReportSelection."Report ID",FALSE,FALSE,ReturnRcptHeader);
        END;
      UNTIL ReportSelection.NEXT = 0;
    END;

    BEGIN
    END.
  }
}

