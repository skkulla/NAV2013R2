OBJECT Codeunit 1202 Import Payroll Transaction
{
  OBJECT-PROPERTIES
  {
    Date=12/02/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10.00.35800;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      FileMgt@1000 : Codeunit 419;
      ImportPayrollTransCap@1002 : TextConst 'ENU=Select Payroll Transaction;ESM=Seleccionar transacci¢n de n¢mina;FRC=S‚lectionnez la transaction Salaires;ENC=Select Payroll Transaction';
      FileFilterTxt@1001 : TextConst 'ENU="Text Files(*.txt;*.csv)|*.txt;*.csv";ESM="Archivos de texto (*.txt;*.csv)|*.txt;*.csv";FRC="Fichiers texte(*.txt;*.csv)|*.txt;*.csv";ENC="Text Files(*.txt;*.csv)|*.txt;*.csv"';
      FileFilterExtensionTxt@1004 : TextConst '@@@={Locked};ENU=txt,csv;ESM=txt,csv;FRC=txt,csv;ENC=txt,csv';

    PROCEDURE SelectAndImportPayrollDataToGL@2(VAR GenJournalLine@1000 : Record 81;PostExchDefCode@1001 : Code[20]);
    VAR
      TempBlob@1002 : Record 99008535;
      FileName@1003 : Text;
    BEGIN
      FileName := FileMgt.BLOBImportWithFilter(TempBlob,ImportPayrollTransCap,'',FileFilterTxt,FileFilterExtensionTxt);
      IF FileName <> '' THEN
        ImportPayrollDataToGL(GenJournalLine,FileName,TempBlob,PostExchDefCode);
    END;

    PROCEDURE ImportPayrollDataToGL@18(GenJournalLine@1000 : Record 81;FileName@1005 : Text;TempBlob@1001 : Record 99008535;PostExchDefCode@1002 : Code[20]);
    VAR
      GenJournalLineTemplate@1060 : Record 81;
      PostingExch@1003 : Record 1220;
    BEGIN
      PrepareGenJournalLine(GenJournalLineTemplate,GenJournalLine);
      CreatePostExch(PostingExch,FileName,TempBlob,PostExchDefCode);
      ImportCSV(PostingExch);
      MapDataToGenJournalLine(PostingExch,GenJournalLineTemplate);
    END;

    PROCEDURE CreatePostExch@9(VAR PostExch@1004 : Record 1220;FileName@1002 : Text;TempBlob@1000 : Record 99008535;PostExchDefCode@1001 : Code[20]);
    VAR
      Source@1003 : InStream;
    BEGIN
      TempBlob.Blob.CREATEINSTREAM(Source);
      PostExch.InsertRec(COPYSTR(FileName,1,MAXSTRLEN(PostExch."File Name")),Source,PostExchDefCode);
    END;

    PROCEDURE ImportCSV@11(PostExch@1000 : Record 1220);
    VAR
      PostingExchDef@1006 : Record 1222;
      Source@1002 : InStream;
    BEGIN
      PostExch."File Content".CREATEINSTREAM(Source);

      PostExch.SETRANGE("Entry No.",PostExch."Entry No.");

      PostingExchDef.GET(PostExch."Posting Exch. Def Code");

      XMLPORT.IMPORT(PostingExchDef."Processing XMLport",Source,PostExch);
    END;

    PROCEDURE MapDataToGenJournalLine@14(PostExch@1000 : Record 1220;GenJournalLineTemplate@1001 : Record 81);
    VAR
      ProcessPostingExch@1003 : Codeunit 1201;
      RecRef@1002 : RecordRef;
    BEGIN
      RecRef.GETTABLE(GenJournalLineTemplate);
      ProcessPostingExch.ProcessColumnMapping(PostExch,RecRef);
    END;

    PROCEDURE PrepareGenJournalLine@1060(VAR GenJournalLineTemplate@1060 : Record 81;GenJournalLine@1061 : Record 81);
    BEGIN
      WITH GenJournalLineTemplate DO BEGIN
        "Journal Template Name" := GenJournalLine."Journal Template Name";
        "Journal Batch Name" := GenJournalLine."Journal Batch Name";
        SetUpNewLine(GenJournalLine,GenJournalLine."Balance (LCY)",TRUE);
        "Account Type" := "Account Type"::"G/L Account";

        GenJournalLine.SETRANGE("Journal Template Name",GenJournalLine."Journal Template Name");
        GenJournalLine.SETRANGE("Journal Batch Name",GenJournalLine."Journal Batch Name");
        IF GenJournalLine.FINDLAST THEN BEGIN
          "Line No." := GenJournalLine."Line No.";
          "Document No." := INCSTR(GenJournalLine."Document No.");
        END ELSE
          "Document No." := GenJournalLine."Document No.";
      END;
    END;

    BEGIN
    END.
  }
}

