OBJECT Page 99000919 Production Forecast
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Production Forecast;
               ESM=Previsi¢n producci¢n;
               FRC=Pr‚vision de production;
               ENC=Production Forecast];
    InsertAllowed=No;
    DeleteAllowed=No;
    DataCaptionExpr=ProductionForecastName;
    PageType=ListPlus;
    OnOpenPage=BEGIN
                 IF (NewProductionForecastName <> '') AND (NewProductionForecastName <> ProductionForecastName) THEN
                   ProductionForecastName := NewProductionForecastName;
                 SetColumns(SetWanted::First);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 7       ;1   ;ActionGroup;
                      CaptionML=[ENU=F&unctions;
                                 ESM=Acci&ones;
                                 FRC=F&onctions;
                                 ENC=F&unctions];
                      Image=Action }
      { 8       ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[ENU=Copy Production Forecast;
                                 ESM=Copiar previsi¢n producc.;
                                 FRC=Copier pr‚vision de production;
                                 ENC=Copy Production Forecast];
                      RunObject=Report 99003803;
                      Image=CopyForecast }
      { 25      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      ToolTipML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Previous);
                               END;
                                }
      { 24      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Column;
                                 ESM=Columna anterior;
                                 FRC=Colonne pr‚c‚dente;
                                 ENC=Previous Column];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::PreviousColumn);
                               END;
                                }
      { 23      ;1   ;Action    ;
                      CaptionML=[ENU=Next Column;
                                 ESM=Columna siguiente;
                                 FRC=Colonne suivante;
                                 ENC=Next Column];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::NextColumn);
                               END;
                                }
      { 22      ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      ToolTipML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[ENU=General;
                           ESM=General;
                           FRC=G‚n‚ral;
                           ENC=General] }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Production Forecast Name;
                           ESM=Nombre previsi¢n producci¢n;
                           FRC=Nom pr‚vision de production;
                           ENC=Production Forecast Name];
                SourceExpr=ProductionForecastName;
                TableRelation="Production Forecast Name".Name;
                OnValidate=BEGIN
                             SetMatrix;
                           END;
                            }

    { 29  ;2   ;Field     ;
                CaptionML=[ENU=Location Filter;
                           ESM=Filtro almac‚n;
                           FRC=Filtre emplacement;
                           ENC=Location Filter];
                SourceExpr=LocationFilter;
                OnValidate=VAR
                             Location@1000 : Record 14;
                           BEGIN
                             Location.SETFILTER(Code,LocationFilter);
                             LocationFilter := Location.GETFILTER(Code);
                             SetMatrix;
                           END;

                OnLookup=VAR
                           LocList@1000 : Page 15;
                           Loc@1001 : Record 14;
                         BEGIN
                           LocList.LOOKUPMODE(TRUE);
                           Loc.SETRANGE("Use As In-Transit",FALSE);
                           LocList.SETTABLEVIEW(Loc);
                           IF NOT (LocList.RUNMODAL = ACTION::LookupOK) THEN
                             EXIT(FALSE);

                           Text := LocList.GetSelectionFilter;

                           EXIT(TRUE);
                         END;
                          }

    { 18  ;2   ;Field     ;
                CaptionML=[ENU=View by;
                           ESM=Ver por;
                           FRC=Afficher par;
                           ENC=View by];
                OptionCaptionML=[ENU=Day,Week,Month,Quarter,Year,Accounting Period;
                                 ESM=D¡a,Semana,Mes,Trimestre,A¤o,Periodo contable;
                                 FRC=Jour,Semaine,Mois,Trimestre,Ann‚e,P‚riode comptable;
                                 ENC=Day,Week,Month,Quarter,Year,Accounting Period];
                SourceExpr=PeriodType;
                OnValidate=BEGIN
                             SetColumns(SetWanted::First);
                           END;
                            }

    { 9   ;2   ;Field     ;
                CaptionML=[ENU=View as;
                           ESM=Ver como;
                           FRC=Afficher en tant que;
                           ENC=View as];
                OptionCaptionML=[ENU=Net Change,Balance at Date;
                                 ESM=Saldo periodo,Saldo a la fecha;
                                 FRC=Variation nette,Solde en date du;
                                 ENC=Net Change,Balance at Date];
                SourceExpr=QtyType;
                OnValidate=BEGIN
                             QtyTypeOnAfterValidate;
                           END;
                            }

    { 13  ;2   ;Field     ;
                CaptionML=[ENU=Forecast Type;
                           ESM=Tipo previsi¢n;
                           FRC=Type pr‚vision;
                           ENC=Forecast Type];
                OptionCaptionML=[ENU=Sales Item,Component,Both;
                                 ESM=Producto venta,Componente,Ambos;
                                 FRC=Article ventes,Composante,Les deux;
                                 ENC=Sales Item,Component,Both];
                SourceExpr=ForecastType;
                OnValidate=BEGIN
                             ForecastTypeOnAfterValidate;
                           END;
                            }

    { 21  ;2   ;Field     ;
                CaptionML=[ENU=Date Filter;
                           ESM=Filtro fecha;
                           FRC=Filtre date;
                           ENC=Date Filter];
                SourceExpr=DateFilter;
                OnValidate=VAR
                             ApplicationManagement@1001 : Codeunit 1;
                             BuiltDateFilter@1000 : Text[1024];
                           BEGIN
                             IF ApplicationManagement.MakeDateFilter(BuiltDateFilter) = 0 THEN;
                             DateFilter := BuiltDateFilter;
                             SetColumns(SetWanted::First);
                           END;
                            }

    { 1102601000;1;Part   ;
                Name=Matrix;
                PagePartID=Page9245 }

  }
  CODE
  {
    VAR
      MatrixRecords@1014 : ARRAY [32] OF Record 2000000007;
      PeriodType@1005 : 'Day,Week,Month,Quarter,Year,Accounting Period';
      QtyType@1016 : 'Net Change,Balance at Date';
      ForecastType@1007 : 'Sales Item,Component,Both';
      ProductionForecastName@1018 : Text[30];
      NewProductionForecastName@1010 : Text[30];
      LocationFilter@1017 : Text;
      DateFilter@1008 : Text;
      MatrixColumnCaptions@1012 : ARRAY [32] OF Text[1024];
      ColumnSet@1011 : Text[1024];
      SetWanted@1009 : 'First,Previous,Same,Next,PreviousColumn,NextColumn';
      PKFirstRecInCurrSet@1006 : Text[100];
      CurrSetLength@1004 : Integer;

    PROCEDURE SetColumns@6(SetWanted@1001 : 'Initial,Previous,Same,Next,PreviousSet,NextSet');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
    BEGIN
      MatrixMgt.GeneratePeriodMatrixData(SetWanted,ARRAYLEN(MatrixRecords),FALSE,PeriodType,DateFilter,PKFirstRecInCurrSet,
        MatrixColumnCaptions,ColumnSet,CurrSetLength,MatrixRecords);
      SetMatrix;
    END;

    PROCEDURE SetProductionForecastName@2(NextProductionForecastName@1000 : Text[30]);
    BEGIN
      NewProductionForecastName := NextProductionForecastName;
    END;

    PROCEDURE SetMatrix@1102601000();
    BEGIN
      CurrPage.Matrix.PAGE.Load(
        MatrixColumnCaptions,MatrixRecords,ProductionForecastName,DateFilter,LocationFilter,ForecastType,
        QtyType,CurrSetLength);
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ForecastTypeOnAfterValidate@19042274();
    BEGIN
      SetMatrix;
    END;

    LOCAL PROCEDURE QtyTypeOnAfterValidate@19050715();
    BEGIN
      SetMatrix;
    END;

    BEGIN
    END.
  }
}

