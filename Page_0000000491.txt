OBJECT Page 491 Items by Location
{
  OBJECT-PROPERTIES
  {
    Date=09/23/13;
    Time=12:00:00 PM;
    Version List=NAVW17.10;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Items by Location;
               ESM=Productos por almac‚n;
               FRC=Articles par emplacement;
               ENC=Items by Location];
    SaveValues=Yes;
    InsertAllowed=No;
    DeleteAllowed=No;
    LinksAllowed=No;
    SourceTable=Table27;
    PageType=Card;
    OnOpenPage=BEGIN
                 SetColumns(MATRIX_SetWanted::Initial);
               END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 13      ;1   ;Action    ;
                      Name=ShowMatrix;
                      CaptionML=[ENU=Show Matrix;
                                 ESM=Mostrar matriz;
                                 FRC=Afficher matrice;
                                 ENC=Show Matrix];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ShowMatrix;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ItemsByLocationMatrix@1000 : Page 9231;
                               BEGIN
                                 ItemsByLocationMatrix.Load(MATRIX_CaptionSet,MatrixRecords,MatrixRecord);
                                 ItemsByLocationMatrix.SETRECORD(Rec);
                                 ItemsByLocationMatrix.RUNMODAL;
                               END;
                                }
      { 31      ;1   ;Action    ;
                      CaptionML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      ToolTipML=[ENU=Previous Set;
                                 ESM=Conjunto anterior;
                                 FRC=Jeu pr‚c‚dent;
                                 ENC=Previous Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PreviousSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_SetWanted::Previous);
                               END;
                                }
      { 32      ;1   ;Action    ;
                      CaptionML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      ToolTipML=[ENU=Next Set;
                                 ESM=Conjunto siguiente;
                                 FRC=Jeu suivant;
                                 ENC=Next Set];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=NextSet;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 SetColumns(MATRIX_SetWanted::Next);
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 12  ;1   ;Group     ;
                CaptionML=[ENU=Options;
                           ESM=Opciones;
                           FRC=Options;
                           ENC=Options] }

    { 14  ;2   ;Field     ;
                CaptionML=[ENU=Show Items in Transit;
                           ESM=Muestra prods. en tr ns.;
                           FRC=Aff. articles en transit;
                           ENC=Show Items in Transit];
                SourceExpr=ShowInTransit;
                OnValidate=BEGIN
                             ShowInTransitOnAfterValidate;
                           END;
                            }

    { 15  ;2   ;Field     ;
                CaptionML=[ENU=Show Column Name;
                           ESM=Muestra nombre columna;
                           FRC=Afficher nom colonne;
                           ENC=Show Column Name];
                SourceExpr=ShowColumnName;
                OnValidate=BEGIN
                             ShowColumnNameOnAfterValidate;
                           END;
                            }

    { 1906098301;1;Group  ;
                CaptionML=[ENU=Matrix Options;
                           ESM=Opciones matriz;
                           FRC=Options de matrice;
                           ENC=Matrix Options] }

    { 30  ;2   ;Field     ;
                CaptionML=[ENU=Column Set;
                           ESM=Conjunto de columnas;
                           FRC=Jeu de colonnes;
                           ENC=Column Set];
                SourceExpr=MATRIX_CaptionRange;
                Editable=FALSE }

  }
  CODE
  {
    VAR
      MatrixRecord@1000 : Record 14;
      MatrixRecords@1010 : ARRAY [32] OF Record 14;
      MatrixRecordRef@1007 : RecordRef;
      MATRIX_SetWanted@1006 : 'Initial,Previous,Same,Next';
      ShowColumnName@1002 : Boolean;
      ShowInTransit@1003 : Boolean;
      MATRIX_CaptionSet@1008 : ARRAY [32] OF Text[1024];
      MATRIX_CaptionRange@1011 : Text[100];
      MATRIX_PKFirstRecInCurrSet@1001 : Text[100];
      MATRIX_CurrSetLength@1004 : Integer;

    PROCEDURE SetColumns@6(SetWanted@1002 : 'Initial,Previous,Same,Next');
    VAR
      MatrixMgt@1000 : Codeunit 9200;
      CaptionFieldNo@1001 : Integer;
      CurrentMatrixRecordOrdinal@1003 : Integer;
    BEGIN
      MatrixRecord.SETRANGE("Use As In-Transit",ShowInTransit);

      CLEAR(MATRIX_CaptionSet);
      CLEAR(MatrixRecords);
      CurrentMatrixRecordOrdinal := 1;

      MatrixRecordRef.GETTABLE(MatrixRecord);
      MatrixRecordRef.SETTABLE(MatrixRecord);

      IF ShowColumnName THEN
        CaptionFieldNo := MatrixRecord.FIELDNO(Name)
      ELSE
        CaptionFieldNo := MatrixRecord.FIELDNO(Code);

      MatrixMgt.GenerateMatrixData(MatrixRecordRef,SetWanted,ARRAYLEN(MatrixRecords),CaptionFieldNo,MATRIX_PKFirstRecInCurrSet,
        MATRIX_CaptionSet,MATRIX_CaptionRange,MATRIX_CurrSetLength);

      IF MATRIX_CurrSetLength > 0 THEN BEGIN
        MatrixRecord.SETPOSITION(MATRIX_PKFirstRecInCurrSet);
        MatrixRecord.FIND;
        REPEAT
          MatrixRecords[CurrentMatrixRecordOrdinal].COPY(MatrixRecord);
          CurrentMatrixRecordOrdinal := CurrentMatrixRecordOrdinal + 1;
        UNTIL (CurrentMatrixRecordOrdinal > MATRIX_CurrSetLength) OR (MatrixRecord.NEXT <> 1);
      END;
    END;

    LOCAL PROCEDURE ShowColumnNameOnAfterValidate@19074585();
    BEGIN
      SetColumns(MATRIX_SetWanted::Same);
    END;

    LOCAL PROCEDURE ShowInTransitOnAfterValidate@19033613();
    BEGIN
      SetColumns(MATRIX_SetWanted::Initial);
    END;

    BEGIN
    END.
  }
}

